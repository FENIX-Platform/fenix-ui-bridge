{"version":3,"sources":["webpack:///fenix-ui-bridge.min.js","webpack:///webpack/bootstrap 984e2869dd5c19f2f5b6","webpack:///./src/js/index.js","webpack:///./src/config/config.js","webpack:///external \"jquery\"","webpack:///external \"underscore\"","webpack:///external \"q\"","webpack:///external \"loglevel\"","webpack:///external \"object-hash\"","webpack:///external \"amplify-store\""],"names":["define","__WEBPACK_EXTERNAL_MODULE_3__","__WEBPACK_EXTERNAL_MODULE_4__","__WEBPACK_EXTERNAL_MODULE_5__","__WEBPACK_EXTERNAL_MODULE_6__","__WEBPACK_EXTERNAL_MODULE_7__","__WEBPACK_EXTERNAL_MODULE_8__","modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","C","$","_","Q","log","Hash","amplify","Bridge","o","capitalizeFirstLetter","string","charAt","toUpperCase","slice","obj","this","cache_db","environment","ENVIR","USE_CACHE","cache","SERVICE_PROVIDER","toLowerCase","alert","prototype","find","key","extend","type","cached","_getCacheItem","self","promise","resolve","serviceProvider","filterService","findService","body","ajax","url","_parseQueryParams","params","contentType","dataType","data","JSON","stringify","then","_setCacheItem","reject","notify","error","deleteMetadata","deleteService","metadataService","_parseUidAndVersion","deleteResource","resourcesService","_protoSaveUpdate","service","saveService","saveMetadata","saveDSD","dsdService","saveData","updateDSD","updateData","deleteData","updateMetadata","dsdRid","dsd","rid","getColumnDistinctValues","columnDistinctValues","columnId","getEnumeration","enumerationService","uid","getCodeList","codeListService","codelistService","getResource","processesService","getProcessedResource","isMultiResource","hasOwnProperty","getMetadata","payload","object","exportFlow","exportStreaming","getMDSD","opts","mdsdService","all","promises","getCacheKey","_getCacheKey","result","each","value","substring","length","appendUid","versionFound","warn","concat","version","sessionStorage","e","item","apply","undefined","serverDevelop","serverProduction","serverDemo","serverWiewsQA","serverWiewsProduction","serviceProviderProduction","serviceProviderDevelop","serviceProviderDemo","serviceProviderWiews","serviceProviderWiews_qa","serviceProviderWiews_production","exportService"],"mappings":"AAAAA,QAAQ,SAAS,aAAa,IAAI,WAAW,cAAc,iBAAkB,SAASC,EAA+BC,EAA+BC,EAA+BC,EAA+BC,EAA+BC,GAAiC,MAAgB,UAAUC,GCI5S,QAAAC,GAAAC,GAGA,GAAAC,EAAAD,GACA,MAAAC,GAAAD,GAAAE,OAGA,IAAAC,GAAAF,EAAAD,IACAE,WACAE,GAAAJ,EACAK,QAAA,EAUA,OANAP,GAAAE,GAAAM,KAAAH,EAAAD,QAAAC,IAAAD,QAAAH,GAGAI,EAAAE,QAAA,EAGAF,EAAAD,QAvBA,GAAAD,KAqCA,OATAF,GAAAQ,EAAAT,EAGAC,EAAAS,EAAAP,EAGAF,EAAAU,EAAA,GAGAV,EAAA,KDMM,SAASI,EAAQD,EAASH,GAE/BI,EAAOD,QAAUH,EAAoB,IAKhC,SAASI,EAAQD,EAASH,GEnDhC,GAAAW,GAAAC,CAIAD,IACAX,EAAA,GACAA,EAAA,GACAA,EAAA,GACAA,EAAA,GACAA,EAAA,GACAA,EAAA,GACAA,EAAA,IACAY,EAAA,SAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GAEA,YAEA,SAAAC,GAAAC,GAWA,QAAAC,GAAAC,GACA,MAAAA,GAAAC,OAAA,GAAAC,cAAAF,EAAAG,MAAA,GAXA,GAAAC,GAAAN,KACAO,MAAAC,YACAD,KAAAE,YAAAH,EAAAG,aAAA,aACAF,KAAAG,MAAAH,KAAAE,YAAAL,cACAG,KAAAI,UAAAL,EAAAM,MACAL,KAAAM,iBAAArB,EAAA,kBAAAS,EAAAM,KAAAG,MAAAI,gBACAP,KAAAM,kBACAE,MAAAR,KAAAE,YAAA,yEAomBA,MA5lBAV,GAAAiB,UAAAC,KAAA,SAAAX,GAEA,GAAAY,GAAAxB,EAAAyB,QACAC,KAAA,OACAX,YAAAF,KAAAG,OACaJ,GACbe,EAAAd,KAAAe,cAAAJ,GACAK,EAAAhB,IAEA,IAAAA,KAAAI,WAAAU,EAEA,MAAA1B,GAAA6B,QAAA,SAAAC,GACA,MAAAA,GAAAJ,IAIA,IAAAK,GAAApB,EAAAO,kBAAAN,KAAAM,iBACAc,EAAArB,EAAAsB,aAAApC,EAAAoC,YACAC,EAAAvB,EAAAuB,IAEA,OAAAlC,GAAAF,EAAAqC,MACAC,IAAAL,EAAAC,EAAApB,KAAAyB,kBAAA1B,EAAA2B,QACAb,KAAAd,EAAAc,MAAA,OACAc,YAAA5B,EAAA6B,UAAA,mBACAC,KAAAC,KAAAC,UAAAT,GACAM,SAAA7B,EAAA6B,UAAA,UACSI,KAAA,SAAAH,GAIT,MAFAb,GAAAiB,cAAAtB,EAAAkB,IAAA,MAEAzC,EAAA6B,QAAA,SAAAC,EAAAgB,EAAAC,GACA,MAAAjB,GAAAF,EAAAD,cAAAJ,OAGS,SAAAyB,GAET,MAAAhD,GAAA6B,QAAA,SAAAC,EAAAgB,EAAAC,GACA,MAAAD,GAAAE,QAMA5C,EAAAiB,UAAA4B,eAAA,SAAAtC,GACA,GAAAoB,GAAApB,EAAAO,kBAAAN,KAAAM,iBACAgC,EAAAvC,EAAAwC,iBAAAtD,EAAAsD,eAEA,OAAAnD,GAAAF,EAAAqC,MACAC,IAAAL,EAAAmB,EAAAtC,KAAAwC,oBAAAzC,GAAA,GACAc,KAAAd,EAAAc,MAAA,SAGAe,SAAA,UAESI,KAAA,SAAAH,GACT,MAAAzC,GAAA6B,QAAA,SAAAC,EAAAgB,EAAAC,GACA,MAAAjB,GAAAW,MAES,SAAAO,GACT,MAAAhD,GAAA6B,QAAA,SAAAC,EAAAgB,EAAAC,GACA,MAAAD,GAAAE,QAMA5C,EAAAiB,UAAAgC,eAAA,SAAA1C,GAEA,GAAAoB,GAAApB,EAAAO,kBAAAN,KAAAM,iBACAgC,EAAAvC,EAAA2C,kBAAAzD,EAAAyD,gBAEA,OAAAtD,GAAAF,EAAAqC,MACAC,IAAAL,EAAAmB,EAAAtC,KAAAwC,oBAAAzC,GAAA,GACAc,KAAAd,EAAAc,MAAA,SAGAe,SAAA,UAESI,KAAA,SAAAH,GACT,MAAAzC,GAAA6B,QAAA,SAAAC,EAAAgB,EAAAC,GACA,MAAAjB,GAAAW,MAES,SAAAO,GACT,MAAAhD,GAAA6B,QAAA,SAAAC,EAAAgB,EAAAC,GACA,MAAAD,GAAAE,QAMA5C,EAAAiB,UAAAkC,iBAAA,SAAAC,EAAA/B,EAAAd,GACA,GAAAoB,GAAApB,EAAAO,kBAAAN,KAAAM,iBACAuC,EAAAD,EACAtB,EAAAvB,EAAAuB,KACAT,EAAAd,EAAAc,OAEA,OAAAzB,GAAAF,EAAAqC,MACAI,YAAA5B,EAAA4B,aAAA,mBACAH,IAAAL,EAAA0B,EACAhC,OACAgB,KAAAC,KAAAC,UAAAT,GACAM,SAAA7B,EAAA6B,UAAA,UACSI,KAAA,SAAAH,GACT,MAAAzC,GAAA6B,QAAA,SAAAC,EAAAgB,EAAAC,GACA,MAAAjB,GAAAW,MAES,SAAAO,GACT,MAAAhD,GAAA6B,QAAA,SAAAC,EAAAgB,EAAAC,GACA,MAAAD,GAAAE,QAOA5C,EAAAiB,UAAAqC,aAAA,SAAA/C,GACA,GAAA8C,GAAA9C,EAAAwC,iBAAAtD,EAAAsD,eACA,OAAAvC,MAAA2C,iBAAAE,EAAA,OAAA9C,IAGAP,EAAAiB,UAAAsC,QAAA,SAAAhD,GACA,GAAA8C,GAAA9C,EAAAiD,YAAA/D,EAAA+D,UACA,OAAAhD,MAAA2C,iBAAAE,EAAA,OAAA9C,IAGAP,EAAAiB,UAAAwC,SAAA,SAAAlD,GACA,GAAA8C,GAAA9C,EAAA2C,kBAAAzD,EAAAyD,gBACA,OAAA1C,MAAA2C,iBAAAE,EAAA,OAAA9C,IAGAP,EAAAiB,UAAAyC,UAAA,SAAAnD,GACA,GAAA8C,GAAA9C,EAAAiD,YAAA/D,EAAA+D,UACA,OAAAhD,MAAA2C,iBAAAE,EAAA,MAAA9C,IAGAP,EAAAiB,UAAA0C,WAAA,SAAApD,GACA,GAAA8C,GAAA9C,EAAA2C,kBAAAzD,EAAAyD,gBACA,OAAA1C,MAAA2C,iBAAAE,EAAA,MAAA9C,IAGAP,EAAAiB,UAAA2C,WAAA,SAAArD,GACA,GAAA8C,GAAA9C,EAAA2C,kBAAAzD,EAAAyD,gBAEA,OADA3C,GAAAuB,KAAAO,QACA7B,KAAA2C,iBAAAE,EAAA,MAAA9C,IAGAP,EAAAiB,UAAA4C,eAAA,SAAAtD,GACA,GAAA8C,GAAA9C,EAAAwC,iBAAAtD,EAAAsD,eAMA,OALAxC,GAAAuD,SACAvD,EAAAuB,KAAAiC,KACAC,IAAAzD,EAAAuD,SAGAtD,KAAA2C,iBAAAE,EAAA,MAAA9C,IAGAP,EAAAiB,UAAAgD,wBAAA,SAAA1D,GAEA,GAAAY,GAAAxB,EAAAyB,QACAC,KAAA,WACAX,YAAAF,KAAAG,OACaJ,GACbe,EAAAd,KAAAe,cAAAJ,GACAK,EAAAhB,IAEA,IAAAA,KAAAI,WAAAU,EACA,MAAA1B,GAAA6B,QAAA,SAAAC,GACA,MAAAA,GAAAJ,IAIA,IAAAK,GAAApB,EAAAoB,iBAAAnB,KAAAM,iBACAoD,EAAA3D,EAAA2D,sBAAAzE,EAAAyE,qBACAlC,EAAAL,EAAAuC,EAAA1D,KAAAwC,oBAAAzC,GAAA,OAAAA,EAAA4D,QAEA,OAAAvE,GAAAF,EAAAqC,MACAC,MACAX,KAAAd,EAAAc,MAAA,MACAe,SAAA7B,EAAA6B,UAAA,UACSI,KAAA,SAAAH,GAIT,MAFAb,GAAAiB,cAAAtB,EAAAkB,IAAA,MAEAzC,EAAA6B,QAAA,SAAAC,EAAAgB,EAAAC,GACA,MAAAjB,GAAAF,EAAAD,cAAAJ,OAGS,SAAAyB,GAET,MAAAhD,GAAA6B,QAAA,SAAAC,EAAAgB,EAAAC,GACA,MAAAD,GAAAE,QAMA5C,EAAAiB,UAAAmD,eAAA,SAAA7D,GAEA,GAAAY,GAAAxB,EAAAyB,QACAC,KAAA,cACAX,YAAAF,KAAAG,OACaJ,GACbe,EAAAd,KAAAe,cAAAJ,GACAK,EAAAhB,IAEA,IAAAA,KAAAI,WAAAU,EACA,MAAA1B,GAAA6B,QAAA,SAAAC,GACA,MAAAA,GAAAJ,IAIA,IAAAK,GAAApB,EAAAoB,iBAAAnB,KAAAM,iBACAuD,EAAA9D,EAAA8D,oBAAA5E,EAAA4E,kBAEA,OAAAzE,GAAAF,EAAAqC,MACAC,IAAAL,EAAA0C,EAAA9D,EAAA+D,IACAjD,KAAAd,EAAAc,MAAA,MACAe,SAAA7B,EAAA6B,UAAA,UACSI,KAAA,SAAAH,GAIT,MAFAb,GAAAiB,cAAAtB,EAAAkB,IAAA,MAEAzC,EAAA6B,QAAA,SAAAC,EAAAgB,EAAAC,GACA,MAAAjB,GAAAF,EAAAD,cAAAJ,OAGS,SAAAyB,GAET,MAAAhD,GAAA6B,QAAA,SAAAC,EAAAgB,EAAAC,GACA,MAAAD,GAAAE,QAMA5C,EAAAiB,UAAAsD,YAAA,SAAAhE,GAEA,GAAAY,GAAAxB,EAAAyB,QACAC,KAAA,WACAX,YAAAF,KAAAG,OACaJ,GACbe,EAAAd,KAAAe,cAAAJ,GACAK,EAAAhB,IAEA,IAAAA,KAAAI,WAAAU,EACA,MAAA1B,GAAA6B,QAAA,SAAAC,GACA,MAAAA,GAAAJ,IAIA,IAAAK,GAAApB,EAAAoB,iBAAAnB,KAAAM,iBACA0D,EAAAjE,EAAAiE,iBAAA/E,EAAAgF,gBACA3C,EAAAvB,EAAAuB,IAEA,OAAAlC,GAAAF,EAAAqC,MACAC,IAAAL,EAAA6C,EAAAhE,KAAAyB,kBAAA1B,EAAA2B,QACAb,KAAAd,EAAAc,MAAA,OACAe,SAAA7B,EAAA6B,UAAA,OACAD,YAAA5B,EAAA4B,aAAA,mBACAE,KAAAC,KAAAC,UAAAT,MACSU,KAAA,SAAAH,GAIT,MAFAb,GAAAiB,cAAAtB,EAAAkB,IAAA,MAEAzC,EAAA6B,QAAA,SAAAC,EAAAgB,EAAAC,GACA,MAAAjB,GAAAF,EAAAD,cAAAJ,OAGS,SAAAyB,GAET,MAAAhD,GAAA6B,QAAA,SAAAC,EAAAgB,EAAAC,GACA,MAAAD,GAAAE,QAOA5C,EAAAiB,UAAAyD,YAAA,SAAAnE,GAEA,GAAAY,GAAAxB,EAAAyB,QACAC,KAAA,WACAX,YAAAF,KAAAG,OACaJ,GACbe,EAAAd,KAAAe,cAAAJ,GACAK,EAAAhB,IAEA,IAAAA,KAAAI,WAAAU,EACA,MAAA1B,GAAA6B,QAAA,SAAAC,GACA,MAAAA,GAAAJ,IAIA,IAAAK,GAAApB,EAAAoB,iBAAAnB,KAAAM,iBACA6D,EAAApE,EAAAoE,kBAAAlF,EAAAyD,iBACAlB,EAAAL,EAAAgD,EAAAnE,KAAAwC,oBAAAzC,GAAA,GAAAC,KAAAyB,kBAAA1B,EAAA2B,OAEA,OAAAtC,GAAAF,EAAAqC,MACAC,MACAX,KAAAd,EAAAc,MAAA,MACAc,YAAA5B,EAAA4B,aAAA,mBACAE,KAAAC,KAAAC,UAAAhC,EAAAuB,SACSU,KAAA,SAAAH,GAIT,MAFAb,GAAAiB,cAAAtB,EAAAkB,IAAA,MAEAzC,EAAA6B,QAAA,SAAAC,EAAAgB,EAAAC,GACA,MAAAjB,GAAAF,EAAAD,cAAAJ,OAGS,SAAAyB,GAET,MAAAhD,GAAA6B,QAAA,SAAAC,EAAAgB,EAAAC,GACA,MAAAD,GAAAE,QAMA5C,EAAAiB,UAAA2D,qBAAA,SAAArE,GAEA,GAAAY,GAAAxB,EAAAyB,QACAC,KAAA,UACAX,YAAAF,KAAAG,OACaJ,GACbe,EAAAd,KAAAe,cAAAJ,GACAK,EAAAhB,IAEA,IAAAA,KAAAI,WAAAU,EACA,MAAA1B,GAAA6B,QAAA,SAAAC,GACA,MAAAA,GAAAJ,IAIA,IAAAK,GAAApB,EAAAoB,iBAAAnB,KAAAM,iBACA6D,EAAApE,EAAAoE,kBAAAlF,EAAAkF,iBACAE,EAAAtE,EAAAuE,eAAA,OACA9C,EAAAL,EAAAgD,GAAAE,EAAArE,KAAAwC,oBAAAzC,GAAA,OAAAC,KAAAyB,kBAAA1B,EAAA2B,OAEA,OAAAtC,GAAAF,EAAAqC,MACAC,MACAX,KAAAd,EAAAc,MAAA,OACAe,SAAA7B,EAAA6B,UAAA,OACAD,YAAA5B,EAAA4B,aAAA,mBACAE,KAAAC,KAAAC,UAAAhC,EAAAuB,SACSU,KAAA,SAAAH,GAIT,MAFAb,GAAAiB,cAAAtB,EAAAkB,IAAA,MAEAzC,EAAA6B,QAAA,SAAAC,EAAAgB,EAAAC,GACA,MAAAjB,GAAAF,EAAAD,cAAAJ,OAGS,SAAAyB,GAET,MAAAhD,GAAA6B,QAAA,SAAAC,EAAAgB,EAAAC,GACA,MAAAD,GAAAE,QAMA5C,EAAAiB,UAAA8D,YAAA,SAAAxE,GAEA,GAAAY,GAAAxB,EAAAyB,QACAC,KAAA,WACAX,YAAAF,KAAAG,OACaJ,GACbe,EAAAd,KAAAe,cAAAJ,GACAK,EAAAhB,IAEA,IAAAA,KAAAI,WAAAU,EACA,MAAA1B,GAAA6B,QAAA,SAAAC,GACA,MAAAA,GAAAJ,IAIA,IAAAK,GAAApB,EAAAoB,iBAAAnB,KAAAM,iBACA6D,EAAApE,EAAAwC,iBAAAtD,EAAAsD,eAEA,OAAAnD,GAAAF,EAAAqC,MACAC,IAAAL,EAAAgD,EAAAnE,KAAAwC,oBAAAzC,GAAA,GAAAC,KAAAyB,kBAAA1B,EAAA2B,QACAb,KAAAd,EAAAc,MAAA,MACAe,SAAA7B,EAAA6B,UAAA,UACSI,KAAA,SAAAH,GAIT,MAFAb,GAAAiB,cAAAtB,EAAAkB,IAAA,MAEAzC,EAAA6B,QAAA,SAAAC,EAAAgB,EAAAC,GACA,MAAAjB,GAAAF,EAAAD,cAAAJ,OAGS,SAAAyB,GAET,MAAAhD,GAAA6B,QAAA,SAAAC,EAAAgB,EAAAC,GACA,MAAAD,GAAAE,QAOA5C,EAAAiB,UAAAjB,UAAA,SAAAgF,EAAAzE,GAEA,GAAAoB,GAAApB,KAAAoB,iBAAAnB,KAAAM,iBACAkB,EAAA,EAMA,OAJAA,GADA,MAAAzB,GAAA,mBAAAA,IAAA,MAAAA,EAAA2B,QAAA,mBAAA3B,GAAA2B,OACAP,EAAAlC,EAAA,cAAAe,KAAAyB,kBAAA1B,EAAA2B,QAEAP,EAAAlC,EAAA,cAEAG,EAAAF,EAAAqC,MACAC,MACAX,KAAA,OACAc,YAAA,mBACAE,KAAAC,KAAAC,UAAAyC,MAESxC,KAAA,SAAAH,GACT,GAAA4C,IAA0B5C,OAAAL,MAC1B,OAAApC,GAAA6B,QAAA,SAAAC,EAAAgB,EAAAC,GACA,MAAAjB,GAAAuD,MAGS,SAAArC,GACT,MAAAhD,GAAA6B,QAAA,SAAAC,EAAAgB,EAAAC,GACA,MAAAjB,GAAAkB,QAOA5C,EAAAiB,UAAAiE,WAAA,SAAAF,EAAAzE,GAEA,GAAAoB,GAAApB,KAAAoB,iBAAAnB,KAAAM,iBACAkB,EAAAL,EAAAlC,EAAA,WAAAe,KAAAyB,kBAAA1B,EAAA2B,OAEA,OAAAtC,GAAAF,EAAAqC,MACAC,MACAX,KAAA,OACAc,YAAA,mBACAE,KAAAC,KAAAC,UAAAyC,GACA5C,SAAA,UAESI,KAAA,SAAAH,GACT,GAAA4C,IAA0B5C,OAAAL,MAC1B,OAAApC,GAAA6B,QAAA,SAAAC,EAAAgB,EAAAC,GACA,MAAAjB,GAAAuD,MAGS,SAAArC,GACT,MAAAhD,GAAA6B,QAAA,SAAAC,EAAAgB,EAAAC,GACA,MAAAjB,GAAAkB,QAMA5C,EAAAiB,UAAAkE,gBAAA,SAAAH,EAAAzE,GAEA,GAAAoB,GAAApB,KAAAoB,iBAAAnB,KAAAM,iBACAkB,EAAAL,EAAAlC,EAAA,gBAAAe,KAAAyB,kBAAA1B,EAAA2B,OAEA,OAAAtC,GAAAF,EAAAqC,MACAC,MACAX,KAAA,OACAc,YAAA,mBACAE,KAAAC,KAAAC,UAAAyC,GACA5C,SAAA,UAGSI,KAAA,SAAAH,GACT,GAAA4C,IAA0B5C,OAAAL,MAC1B,OAAApC,GAAA6B,QAAA,SAAAC,EAAAgB,EAAAC,GACA,MAAAjB,GAAAuD,MAGS,SAAArC,GACT,MAAAhD,GAAA6B,QAAA,SAAAC,EAAAgB,EAAAC,GACA,MAAAjB,GAAAkB,QAMA5C,EAAAiB,UAAAmE,QAAA,SAAAC,GAEA,GAAA9E,GAAA8E,MACAlE,EAAAxB,EAAAyB,QACAC,KAAA,OACAX,YAAAF,KAAAG,OACaJ,GACbe,EAAAd,KAAAe,cAAAJ,GACAK,EAAAhB,IAEA,IAAAA,KAAAI,WAAAU,EACA,MAAA1B,GAAA6B,QAAA,SAAAC,GACA,MAAAA,GAAAJ,IAIA,IAAAK,GAAApB,EAAAoB,iBAAAnB,KAAAM,iBACAwE,EAAA/E,EAAA+E,aAAA7F,EAAA6F,YACAtD,EAAAL,EAAA2D,EAAA9E,KAAAyB,kBAAA1B,EAAA2B,OAEA,OAAAtC,GAAAF,EAAAqC,MACAC,MACAX,KAAAd,EAAAc,MAAA,MACAe,SAAA7B,EAAA6B,UAAA,UACSI,KAAA,SAAAH,GAIT,MAFAb,GAAAiB,cAAAtB,EAAAkB,IAAA,MAEAzC,EAAA6B,QAAA,SAAAC,EAAAgB,EAAAC,GACA,MAAAjB,GAAAF,EAAAD,cAAAJ,OAGS,SAAAyB,GAET,MAAAhD,GAAA6B,QAAA,SAAAC,EAAAgB,EAAAC,GACA,MAAAD,GAAAE,QAOA5C,EAAAiB,UAAAsE,IAAA,SAAAC,GAEA,MAAA5F,GAAA2F,IAAAC,IAGAxF,EAAAiB,UAAAwE,YAAA,SAAAlF,GAEA,MAAAC,MAAAkF,aAAAnF,IAGAP,EAAAiB,UAAAgB,kBAAA,SAAAC,GAEA,IAAAA,EACA,QAGA,IAAAyD,GAAA,GAMA,OAJAhG,GAAAiG,KAAA1D,EAAA,SAAA2D,EAAA1E,GACAwE,GAAAxE,EAAA,IAAA0E,EAAA,MAGAF,EAAAG,UAAA,EAAAH,EAAAI,OAAA,IAIA/F,EAAAiB,UAAA+B,oBAAA,SAAAd,EAAA8D,GAEA,GAAAL,GAAA,GACAM,GAAA,CAaA,OAXA/D,GAAAoC,KACAzE,EAAAqG,KAAA,0BAGAP,IAAAQ,OAAAjE,EAAAoC,KAEApC,EAAAkE,UACAT,IAAAQ,OAAA,KAAAA,OAAAjE,EAAAkE,SACAH,GAAA,GAGAD,KAAA,GAAAC,KAAA,SAAAN,KAIA3F,EAAAiB,UAAAwB,cAAA,SAAAlC,EAAAsF,GAEA,GAAA1E,GAAAX,KAAAiF,YAAAlF,EAEA,KACAR,EAAAsG,eAAAlF,EAAA0E,GACS,MAAAS,GAET9F,KAAAC,SAAAU,GAAA0E,EAGA,MAAArF,MAAAe,cAAAJ,IAGAnB,EAAAiB,UAAAM,cAAA,SAAAhB,GAEA,GAAAY,GAAAX,KAAAiF,YAAAlF,GACAgG,EAAAxG,EAAAsG,eAAAlF,EAEA,OAAAoF,KAAA/F,KAAAC,SAAAU,IAIAnB,EAAAiB,UAAAyE,aAAA,SAAAnF,GAEA,GAAAY,GAAArB,EAAAS,EAEA,OAAAY,IAIAnB,GAECwG,MAAAzH,EAAAQ,KAAAkH,SAAAjH,IAAAR,EAAAD,QAAAS,KFyDK,SAASR,EAAQD,EAASH,GGvrBhC,GAAAY,EAIAA,GAAA,WAEA,YAEA,IAAAkH,GAAA,mBACAC,EAAA,2BACAC,EAAA,mBACAC,EAAA,iCACAC,EAAA,qCAGA,QAGAC,0BAAAJ,EAAA,OACAK,uBAAAN,EAAA,WACAO,oBAAAL,EAAA,OACAM,qBAAAN,EAAA,aACAO,wBAAAN,EAAA,OACAO,gCAAAN,EAAA,OACAO,cAAA,gBACAnC,WAAA,eACAC,gBAAA,WACAtD,YAAA,qBACA4C,gBAAA,mBACAJ,mBAAA,eACAM,iBAAA,aACA5B,gBAAA,0BACAS,WAAA,oBACAN,iBAAA,iBACAoC,YAAA,QACApB,qBAAA,oBAEArD,OAAA,IAEC1B,KAAAJ,EAAAH,EAAAG,EAAAC,KAAAyH,SAAAjH,IAAAR,EAAAD,QAAAS,KH6rBK,SAASR,EAAQD,GIpuBvBC,EAAAD,QAAAV,GJ0uBM,SAASW,EAAQD,GK1uBvBC,EAAAD,QAAAT,GLgvBM,SAASU,EAAQD,GMhvBvBC,EAAAD,QAAAR,GNsvBM,SAASS,EAAQD,GOtvBvBC,EAAAD,QAAAP,GP4vBM,SAASQ,EAAQD,GQ5vBvBC,EAAAD,QAAAN,GRkwBM,SAASO,EAAQD,GSlwBvBC,EAAAD,QAAAL","file":"fenix-ui-bridge.min.js","sourcesContent":["define([\"jquery\",\"underscore\",\"q\",\"loglevel\",\"object-hash\",\"amplify-store\"], function(__WEBPACK_EXTERNAL_MODULE_3__, __WEBPACK_EXTERNAL_MODULE_4__, __WEBPACK_EXTERNAL_MODULE_5__, __WEBPACK_EXTERNAL_MODULE_6__, __WEBPACK_EXTERNAL_MODULE_7__, __WEBPACK_EXTERNAL_MODULE_8__) { return /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__(1);\n\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;if (false) {\r\n\t    var define = require('amdefine')(module);\r\n\t}\r\n\t\r\n\t!(__WEBPACK_AMD_DEFINE_ARRAY__ = [\r\n\t    __webpack_require__(2),\r\n\t    __webpack_require__(3),\r\n\t    __webpack_require__(4),\r\n\t    __webpack_require__(5),\r\n\t    __webpack_require__(6),\r\n\t    __webpack_require__(7),\r\n\t    __webpack_require__(8)\r\n\t], __WEBPACK_AMD_DEFINE_RESULT__ = function (C, $, _, Q, log, Hash, amplify) {\r\n\t\r\n\t    'use strict';\r\n\t\r\n\t    function Bridge(o) {\r\n\t        var obj = o || {};\r\n\t        this.cache_db = {};\r\n\t        this.environment = obj.environment || 'production';\r\n\t        this.ENVIR = this.environment.toUpperCase();\r\n\t        this.USE_CACHE = obj.cache;\r\n\t        this.SERVICE_PROVIDER = C['serviceProvider' + capitalizeFirstLetter(this.ENVIR.toLowerCase())];\r\n\t        if (!this.SERVICE_PROVIDER) {\r\n\t            alert(this.environment + \" is not a valid FENIX environment: [develop, production, demo, wiews]\");\r\n\t        }\r\n\t\r\n\t        function capitalizeFirstLetter(string) {\r\n\t            return string.charAt(0).toUpperCase() + string.slice(1);\r\n\t        }\r\n\t    }\r\n\t\r\n\t    Bridge.prototype.find = function (obj) {\r\n\t\r\n\t        var key = _.extend({\r\n\t                type: \"find\",\r\n\t                environment: this.ENVIR\r\n\t            }, obj),\r\n\t            cached = this._getCacheItem(key),\r\n\t            self = this;\r\n\t\r\n\t        if (this.USE_CACHE && cached) {\r\n\t\r\n\t            return Q.promise(function (resolve) {\r\n\t                return resolve(cached);\r\n\t            });\r\n\t        }\r\n\t\r\n\t        var serviceProvider = obj.SERVICE_PROVIDER || this.SERVICE_PROVIDER,\r\n\t            filterService = obj.findService || C.findService,\r\n\t            body = obj.body;\r\n\t\r\n\t        return Q($.ajax({\r\n\t            url: serviceProvider + filterService + this._parseQueryParams(obj.params),\r\n\t            type: obj.type || \"POST\",\r\n\t            contentType: obj.dataType || \"application/json\",\r\n\t            data: JSON.stringify(body),\r\n\t            dataType: obj.dataType || 'json'\r\n\t        })).then(function (data) {\r\n\t\r\n\t            self._setCacheItem(key, data ? data : null);\r\n\t\r\n\t            return Q.promise(function (resolve, reject, notify) {\r\n\t                return resolve(self._getCacheItem(key));\r\n\t            });\r\n\t\r\n\t        }, function (error) {\r\n\t\r\n\t            return Q.promise(function (resolve, reject, notify) {\r\n\t                return reject(error);\r\n\t            });\r\n\t\r\n\t        });\r\n\t    };\r\n\t\r\n\t    Bridge.prototype.deleteMetadata = function(obj) {\r\n\t        var serviceProvider = obj.SERVICE_PROVIDER || this.SERVICE_PROVIDER,\r\n\t            deleteService = obj.metadataService || C.metadataService;\r\n\t\r\n\t        return Q($.ajax({\r\n\t            url: serviceProvider + deleteService + this._parseUidAndVersion(obj, true),\r\n\t            type: obj.type || \"DELETE\",\r\n\t            // Datatype changed to text as the server returns an empty response,\r\n\t            // setting it to json would trigger an error on success\r\n\t            dataType: 'text'\r\n\t\r\n\t        })).then(function (data) {\r\n\t            return Q.promise(function (resolve, reject, notify) {\r\n\t                return resolve(data);\r\n\t            });\r\n\t        }, function (error) {\r\n\t            return Q.promise(function (resolve, reject, notify) {\r\n\t                return reject(error);\r\n\t            });\r\n\t\r\n\t        });\r\n\t    };\r\n\t\r\n\t    Bridge.prototype.deleteResource = function(obj) {\r\n\t\r\n\t        var serviceProvider = obj.SERVICE_PROVIDER || this.SERVICE_PROVIDER,\r\n\t            deleteService = obj.resourcesService || C.resourcesService;\r\n\t\r\n\t        return Q($.ajax({\r\n\t            url: serviceProvider + deleteService + this._parseUidAndVersion(obj, true),\r\n\t            type: obj.type || \"DELETE\",\r\n\t            // Datatype changed to text as the server returns an empty response,\r\n\t            // setting it to json would trigger an error on success\r\n\t            dataType: 'text'\r\n\t\r\n\t        })).then(function (data) {\r\n\t            return Q.promise(function (resolve, reject, notify) {\r\n\t                return resolve(data);\r\n\t            });\r\n\t        }, function (error) {\r\n\t            return Q.promise(function (resolve, reject, notify) {\r\n\t                return reject(error);\r\n\t            });\r\n\t\r\n\t        });\r\n\t    };\r\n\t\r\n\t    Bridge.prototype._protoSaveUpdate = function(service, type, obj) {\r\n\t        var serviceProvider = obj.SERVICE_PROVIDER || this.SERVICE_PROVIDER,\r\n\t            saveService = service,\r\n\t            body = obj.body,\r\n\t            type = obj.type || type;\r\n\t\r\n\t        return Q($.ajax({\r\n\t            contentType: obj.contentType || 'application/json',\r\n\t            url: serviceProvider + saveService,\r\n\t            type: type,\r\n\t            data: JSON.stringify(body),\r\n\t            dataType: obj.dataType || 'json'\r\n\t        })).then(function (data) {\r\n\t            return Q.promise(function (resolve, reject, notify) {\r\n\t                return resolve(data);\r\n\t            });\r\n\t        }, function (error) {\r\n\t            return Q.promise(function (resolve, reject, notify) {\r\n\t                return reject(error);\r\n\t            });\r\n\t\r\n\t        });\r\n\t\r\n\t    };\r\n\t\r\n\t    Bridge.prototype.saveMetadata = function (obj) {\r\n\t        var saveService = obj.metadataService || C.metadataService;\r\n\t        return this._protoSaveUpdate(saveService, \"POST\", obj);\r\n\t    };\r\n\t\r\n\t    Bridge.prototype.saveDSD = function (obj) {\r\n\t        var saveService = obj.dsdService || C.dsdService;\r\n\t        return this._protoSaveUpdate(saveService, \"POST\", obj);\r\n\t    };\r\n\t\r\n\t    Bridge.prototype.saveData = function (obj) {\r\n\t        var saveService = obj.resourcesService || C.resourcesService;\r\n\t        return this._protoSaveUpdate(saveService, \"POST\", obj);\r\n\t    };\r\n\t\r\n\t    Bridge.prototype.updateDSD = function (obj) {\r\n\t        var saveService = obj.dsdService || C.dsdService;\r\n\t        return this._protoSaveUpdate(saveService, \"PUT\", obj);\r\n\t    };\r\n\t\r\n\t    Bridge.prototype.updateData = function (obj) {\r\n\t        var saveService = obj.resourcesService || C.resourcesService;\r\n\t        return this._protoSaveUpdate(saveService, \"PUT\", obj);\r\n\t    };\r\n\t\r\n\t    Bridge.prototype.deleteData = function (obj) {\r\n\t        var saveService = obj.resourcesService || C.resourcesService;\r\n\t        obj.body.data = [];\r\n\t        return this._protoSaveUpdate(saveService, \"PUT\", obj);\r\n\t    };\r\n\t\r\n\t    Bridge.prototype.updateMetadata = function (obj) {\r\n\t        var saveService = obj.metadataService || C.metadataService;\r\n\t        if (obj.dsdRid) {\r\n\t            obj.body.dsd = {\r\n\t                'rid' : obj.dsdRid\r\n\t            }\r\n\t        }\r\n\t        return this._protoSaveUpdate(saveService, \"PUT\", obj);\r\n\t    };\r\n\t\r\n\t    Bridge.prototype.getColumnDistinctValues = function (obj) {\r\n\t\r\n\t        var key = _.extend({\r\n\t                type: \"distinct\",\r\n\t                environment: this.ENVIR\r\n\t            }, obj),\r\n\t            cached = this._getCacheItem(key),\r\n\t            self = this;\r\n\t\r\n\t        if (this.USE_CACHE && cached) {\r\n\t            return Q.promise(function (resolve) {\r\n\t                return resolve(cached);\r\n\t            });\r\n\t        }\r\n\t\r\n\t        var serviceProvider = obj.serviceProvider || this.SERVICE_PROVIDER,\r\n\t            columnDistinctValues = obj.columnDistinctValues  || C.columnDistinctValues,\r\n\t            url = serviceProvider + columnDistinctValues + this._parseUidAndVersion(obj, false) +\"/\"+ obj.columnId;\r\n\t\r\n\t        return Q($.ajax({\r\n\t            url: url,\r\n\t            type: obj.type || \"GET\",\r\n\t            dataType: obj.dataType || 'json'\r\n\t        })).then(function (data) {\r\n\t\r\n\t            self._setCacheItem(key, data ? data : null);\r\n\t\r\n\t            return Q.promise(function (resolve, reject, notify) {\r\n\t                return resolve(self._getCacheItem(key));\r\n\t            });\r\n\t\r\n\t        }, function (error) {\r\n\t\r\n\t            return Q.promise(function (resolve, reject, notify) {\r\n\t                return reject(error);\r\n\t            });\r\n\t\r\n\t        });\r\n\t    };\r\n\t\r\n\t    Bridge.prototype.getEnumeration = function (obj) {\r\n\t\r\n\t        var key = _.extend({\r\n\t                type: \"enumeration\",\r\n\t                environment: this.ENVIR\r\n\t            }, obj),\r\n\t            cached = this._getCacheItem(key),\r\n\t            self = this;\r\n\t\r\n\t        if (this.USE_CACHE && cached) {\r\n\t            return Q.promise(function (resolve) {\r\n\t                return resolve(cached);\r\n\t            });\r\n\t        }\r\n\t\r\n\t        var serviceProvider = obj.serviceProvider || this.SERVICE_PROVIDER,\r\n\t            enumerationService = obj.enumerationService || C.enumerationService;\r\n\t\r\n\t        return Q($.ajax({\r\n\t            url: serviceProvider + enumerationService + obj.uid,\r\n\t            type: obj.type || \"GET\",\r\n\t            dataType: obj.dataType || 'json'\r\n\t        })).then(function (data) {\r\n\t\r\n\t            self._setCacheItem(key, data ? data : null);\r\n\t\r\n\t            return Q.promise(function (resolve, reject, notify) {\r\n\t                return resolve(self._getCacheItem(key));\r\n\t            });\r\n\t\r\n\t        }, function (error) {\r\n\t\r\n\t            return Q.promise(function (resolve, reject, notify) {\r\n\t                return reject(error);\r\n\t            });\r\n\t\r\n\t        });\r\n\t    };\r\n\t\r\n\t    Bridge.prototype.getCodeList = function (obj) {\r\n\t\r\n\t        var key = _.extend({\r\n\t                type: \"codelist\",\r\n\t                environment: this.ENVIR\r\n\t            }, obj),\r\n\t            cached = this._getCacheItem(key),\r\n\t            self = this;\r\n\t\r\n\t        if (this.USE_CACHE && cached) {\r\n\t            return Q.promise(function (resolve) {\r\n\t                return resolve(cached);\r\n\t            });\r\n\t        }\r\n\t\r\n\t        var serviceProvider = obj.serviceProvider || this.SERVICE_PROVIDER,\r\n\t            codeListService = obj.codeListService || C.codelistService,\r\n\t            body = obj.body;\r\n\t\r\n\t        return Q($.ajax({\r\n\t            url: serviceProvider + codeListService + this._parseQueryParams(obj.params),\r\n\t            type: obj.type || \"POST\",\r\n\t            dataType: obj.dataType || 'json',\r\n\t            contentType: obj.contentType || \"application/json\",\r\n\t            data: JSON.stringify(body)\r\n\t        })).then(function (data) {\r\n\t\r\n\t            self._setCacheItem(key, data ? data : null);\r\n\t\r\n\t            return Q.promise(function (resolve, reject, notify) {\r\n\t                return resolve(self._getCacheItem(key));\r\n\t            });\r\n\t\r\n\t        }, function (error) {\r\n\t\r\n\t            return Q.promise(function (resolve, reject, notify) {\r\n\t                return reject(error);\r\n\t            });\r\n\t\r\n\t        });\r\n\t\r\n\t    };\r\n\t\r\n\t    Bridge.prototype.getResource = function (obj) {\r\n\t\r\n\t        var key = _.extend({\r\n\t                type: \"resource\",\r\n\t                environment: this.ENVIR\r\n\t            }, obj),\r\n\t            cached = this._getCacheItem(key),\r\n\t            self = this;\r\n\t\r\n\t        if (this.USE_CACHE && cached) {\r\n\t            return Q.promise(function (resolve) {\r\n\t                return resolve(cached);\r\n\t            });\r\n\t        }\r\n\t\r\n\t        var serviceProvider = obj.serviceProvider || this.SERVICE_PROVIDER,\r\n\t            processesService = obj.processesService || C.resourcesService,\r\n\t            url = serviceProvider + processesService + this._parseUidAndVersion(obj, true) + this._parseQueryParams(obj.params);\r\n\t\r\n\t        return Q($.ajax({\r\n\t            url: url,\r\n\t            type: obj.type || \"GET\",\r\n\t            contentType: obj.contentType || \"application/json\",\r\n\t            data: JSON.stringify(obj.body)\r\n\t        })).then(function (data) {\r\n\t\r\n\t            self._setCacheItem(key, data ? data : null);\r\n\t\r\n\t            return Q.promise(function (resolve, reject, notify) {\r\n\t                return resolve(self._getCacheItem(key));\r\n\t            });\r\n\t\r\n\t        }, function (error) {\r\n\t\r\n\t            return Q.promise(function (resolve, reject, notify) {\r\n\t                return reject(error);\r\n\t            });\r\n\t\r\n\t        });\r\n\t    };\r\n\t\r\n\t    Bridge.prototype.getProcessedResource = function (obj) {\r\n\t\r\n\t        var key = _.extend({\r\n\t                type: \"process\",\r\n\t                environment: this.ENVIR\r\n\t            }, obj),\r\n\t            cached = this._getCacheItem(key),\r\n\t            self = this;\r\n\t\r\n\t        if (this.USE_CACHE && cached) {\r\n\t            return Q.promise(function (resolve) {\r\n\t                return resolve(cached);\r\n\t            });\r\n\t        }\r\n\t\r\n\t        var serviceProvider = obj.serviceProvider || this.SERVICE_PROVIDER,\r\n\t            processesService = obj.processesService || C.processesService,\r\n\t            isMultiResource = obj.hasOwnProperty(\"uid\"),\r\n\t            url = ( serviceProvider + processesService) + (isMultiResource ? this._parseUidAndVersion(obj, false) : \"\") + this._parseQueryParams(obj.params);\r\n\t\r\n\t        return Q($.ajax({\r\n\t            url: url,\r\n\t            type: obj.type || \"POST\",\r\n\t            dataType: obj.dataType || 'json',\r\n\t            contentType: obj.contentType || \"application/json\",\r\n\t            data: JSON.stringify(obj.body)\r\n\t        })).then(function (data) {\r\n\t\r\n\t            self._setCacheItem(key, data ? data : null);\r\n\t\r\n\t            return Q.promise(function (resolve, reject, notify) {\r\n\t                return resolve(self._getCacheItem(key));\r\n\t            });\r\n\t\r\n\t        }, function (error) {\r\n\t\r\n\t            return Q.promise(function (resolve, reject, notify) {\r\n\t                return reject(error);\r\n\t            });\r\n\t\r\n\t        });\r\n\t    };\r\n\t\r\n\t    Bridge.prototype.getMetadata = function (obj) {\r\n\t\r\n\t        var key = _.extend({\r\n\t                type: \"metadata\",\r\n\t                environment: this.ENVIR\r\n\t            }, obj),\r\n\t            cached = this._getCacheItem(key),\r\n\t            self = this;\r\n\t\r\n\t        if (this.USE_CACHE && cached) {\r\n\t            return Q.promise(function (resolve) {\r\n\t                return resolve(cached);\r\n\t            });\r\n\t        }\r\n\t\r\n\t        var serviceProvider = obj.serviceProvider || this.SERVICE_PROVIDER,\r\n\t            processesService = obj.metadataService || C.metadataService;\r\n\t\r\n\t        return Q($.ajax({\r\n\t            url: serviceProvider + processesService + this._parseUidAndVersion(obj, true) + this._parseQueryParams(obj.params),\r\n\t            type: obj.type || \"GET\",\r\n\t            dataType: obj.dataType || 'json'\r\n\t        })).then(function (data) {\r\n\t\r\n\t            self._setCacheItem(key, data ? data : null);\r\n\t\r\n\t            return Q.promise(function (resolve, reject, notify) {\r\n\t                return resolve(self._getCacheItem(key));\r\n\t            });\r\n\t\r\n\t        }, function (error) {\r\n\t\r\n\t            return Q.promise(function (resolve, reject, notify) {\r\n\t                return reject(error);\r\n\t            });\r\n\t\r\n\t        });\r\n\t\r\n\t    };\r\n\t\r\n\t    Bridge.prototype.export = function (payload, obj) {\r\n\t\r\n\t        var serviceProvider = (obj && obj.serviceProvider) || this.SERVICE_PROVIDER;\r\n\t        var url = '';\r\n\t        if((obj!=null)&&(typeof obj!='undefined')&&(obj.params!=null)&&(typeof obj.params!='undefined')) {\r\n\t            url = serviceProvider + (C.exportService)+  this._parseQueryParams(obj.params);}\r\n\t        else{\r\n\t            url = serviceProvider + (C.exportService);}\r\n\t\r\n\t        return Q($.ajax({\r\n\t            url: url,\r\n\t            type: \"POST\",\r\n\t            contentType: \"application/json\",\r\n\t            data: JSON.stringify(payload)\r\n\t\r\n\t        })).then(function (data) {\r\n\t            var object = {'data': data, 'url': url};\r\n\t            return Q.promise(function (resolve, reject, notify) {\r\n\t                return resolve(object);\r\n\t            });\r\n\t\r\n\t        }, function (error) {\r\n\t            return Q.promise(function (resolve, reject, notify) {\r\n\t                return resolve(error);\r\n\t            });\r\n\t        });\r\n\t\r\n\t    };\r\n\t\r\n\t\r\n\t    Bridge.prototype.exportFlow = function (payload, obj) {\r\n\t\r\n\t        var serviceProvider = (obj && obj.serviceProvider) || this.SERVICE_PROVIDER,\r\n\t         url = serviceProvider + (C.exportFlow) + this._parseQueryParams(obj.params) ;\r\n\t\r\n\t        return Q($.ajax({\r\n\t            url: url,\r\n\t            type: \"POST\",\r\n\t            contentType: \"application/json\",\r\n\t            data: JSON.stringify(payload),\r\n\t            dataType:\"text\"\r\n\t\r\n\t        })).then(function (data) {\r\n\t            var object = {'data': data, 'url': url};\r\n\t            return Q.promise(function (resolve, reject, notify) {\r\n\t                return resolve(object);\r\n\t            });\r\n\t\r\n\t        }, function (error) {\r\n\t            return Q.promise(function (resolve, reject, notify) {\r\n\t                return resolve(error);\r\n\t            });\r\n\t        });\r\n\t\r\n\t    };\r\n\t\r\n\t    Bridge.prototype.exportStreaming = function (payload, obj) {\r\n\t\r\n\t        var serviceProvider = (obj && obj.serviceProvider) || this.SERVICE_PROVIDER,\r\n\t            url = serviceProvider + (C.exportStreaming) + this._parseQueryParams(obj.params) ;\r\n\t\r\n\t        return Q($.ajax({\r\n\t            url: url,\r\n\t            type: \"POST\",\r\n\t            contentType: \"application/json\",\r\n\t            data: JSON.stringify(payload),\r\n\t            dataType:\"text\"\r\n\t\r\n\t\r\n\t        })).then(function (data) {\r\n\t            var object = {'data': data, 'url': url};\r\n\t            return Q.promise(function (resolve, reject, notify) {\r\n\t                return resolve(object);\r\n\t            });\r\n\t\r\n\t        }, function (error) {\r\n\t            return Q.promise(function (resolve, reject, notify) {\r\n\t                return resolve(error);\r\n\t            });\r\n\t        });\r\n\t\r\n\t    };\r\n\t\r\n\t    Bridge.prototype.getMDSD = function (opts) {\r\n\t\r\n\t        var obj = opts || {},\r\n\t            key = _.extend({\r\n\t                type: \"mdsd\",\r\n\t                environment: this.ENVIR\r\n\t            }, obj),\r\n\t            cached = this._getCacheItem(key),\r\n\t            self = this;\r\n\t\r\n\t        if (this.USE_CACHE && cached) {\r\n\t            return Q.promise(function (resolve) {\r\n\t                return resolve(cached);\r\n\t            });\r\n\t        }\r\n\t\r\n\t        var serviceProvider = obj.serviceProvider || this.SERVICE_PROVIDER,\r\n\t            mdsdService = obj.mdsdService || C.mdsdService,\r\n\t            url = serviceProvider + mdsdService + this._parseQueryParams(obj.params);\r\n\t\r\n\t        return Q($.ajax({\r\n\t            url: url,\r\n\t            type: obj.type || \"GET\",\r\n\t            dataType: obj.dataType || 'json'\r\n\t        })).then(function (data) {\r\n\t\r\n\t            self._setCacheItem(key, data ? data : null);\r\n\t\r\n\t            return Q.promise(function (resolve, reject, notify) {\r\n\t                return resolve(self._getCacheItem(key));\r\n\t            });\r\n\t\r\n\t        }, function (error) {\r\n\t\r\n\t            return Q.promise(function (resolve, reject, notify) {\r\n\t                return reject(error);\r\n\t            });\r\n\t\r\n\t        });\r\n\t\r\n\t    };\r\n\t\r\n\t    Bridge.prototype.all = function (promises) {\r\n\t\r\n\t        return Q.all(promises);\r\n\t    };\r\n\t\r\n\t    Bridge.prototype.getCacheKey = function (obj) {\r\n\t\r\n\t        return this._getCacheKey(obj);\r\n\t    };\r\n\t\r\n\t    Bridge.prototype._parseQueryParams = function (params) {\r\n\t\r\n\t        if (!params) {\r\n\t            return '';\r\n\t        }\r\n\t\r\n\t        var result = '?';\r\n\t\r\n\t        _.each(params, function (value, key) {\r\n\t            result += key + '=' + value + '&'\r\n\t        });\r\n\t\r\n\t        return result.substring(0, result.length - 1);\r\n\t\r\n\t    };\r\n\t\r\n\t    Bridge.prototype._parseUidAndVersion = function (params, appendUid) {\r\n\t\r\n\t        var result = '',\r\n\t            versionFound = false;\r\n\t\r\n\t        if (!params.uid) {\r\n\t            log.warn(\"Impossible to find uid\")\r\n\t        }\r\n\t\r\n\t        result = result.concat(params.uid);\r\n\t\r\n\t        if (!!params.version) {\r\n\t            result = result.concat(\"/\").concat(params.version);\r\n\t            versionFound = true;\r\n\t        }\r\n\t\r\n\t        return (appendUid === true && versionFound !== true) ? 'uid/' + result : result;\r\n\t\r\n\t    };\r\n\t\r\n\t    Bridge.prototype._setCacheItem = function (obj, value) {\r\n\t\r\n\t        var key = this.getCacheKey(obj);\r\n\t\r\n\t        try {\r\n\t            amplify.sessionStorage(key, value)\r\n\t        } catch (e) {\r\n\t\r\n\t            this.cache_db[key] = value;\r\n\t        }\r\n\t\r\n\t        return this._getCacheItem(key);\r\n\t    };\r\n\t\r\n\t    Bridge.prototype._getCacheItem = function (obj) {\r\n\t\r\n\t        var key = this.getCacheKey(obj),\r\n\t            item = amplify.sessionStorage(key);\r\n\t\r\n\t        return item ? item : this.cache_db[key];\r\n\t\r\n\t    };\r\n\t\r\n\t    Bridge.prototype._getCacheKey = function (obj) {\r\n\t\r\n\t        var key = Hash(obj);\r\n\t\r\n\t        return key;\r\n\t\r\n\t    };\r\n\t\r\n\t    return Bridge;\r\n\t\r\n\t}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;if (false) {\r\n\t    var define = require('amdefine')(module);\r\n\t}\r\n\t\r\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function () {\r\n\t\r\n\t    'use strict';\r\n\t\r\n\t    var serverDevelop = '//fenix.fao.org/',\r\n\t        serverProduction = '//fenixservices.fao.org/',\r\n\t        serverDemo = '//fenix.fao.org/',\r\n\t        serverWiewsQA = '//www.fao.org/fenix/wiews/api/',\r\n\t        serverWiewsProduction = '//www-test.fao.org/fenix/wiews/api/';\r\n\t\r\n\t\r\n\t    return {\r\n\t\r\n\t        //Bridge\r\n\t        serviceProviderProduction : serverProduction + \"d3s/\",\r\n\t        serviceProviderDevelop : serverDevelop + \"d3s_dev/\",\r\n\t        serviceProviderDemo : serverDemo + \"d3s/\",\r\n\t        serviceProviderWiews : serverDemo + \"d3s_wiews/\",\r\n\t        serviceProviderWiews_qa : serverWiewsQA + \"d3s/\",\r\n\t        serviceProviderWiews_production : serverWiewsProduction + \"d3s/\",\r\n\t        exportService :\"/fenix/export\",\r\n\t        exportFlow :\"/export/flow\",\r\n\t        exportStreaming :\"/export/\",\r\n\t        findService : \"msd/resources/find\",\r\n\t        codelistService: 'msd/codes/filter',\r\n\t        enumerationService: 'msd/choices/',\r\n\t        processesService : \"processes/\",\r\n\t        metadataService : \"msd/resources/metadata/\",\r\n\t        dsdService : \"msd/resources/dsd\",\r\n\t        resourcesService : \"msd/resources/\",\r\n\t        mdsdService : \"mdsd/\",\r\n\t        columnDistinctValues : \"dataset/distinct/\",\r\n\t\r\n\t        cache : true\r\n\t    }\r\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ },\n/* 3 */\n/***/ function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_3__;\n\n/***/ },\n/* 4 */\n/***/ function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_4__;\n\n/***/ },\n/* 5 */\n/***/ function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_5__;\n\n/***/ },\n/* 6 */\n/***/ function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_6__;\n\n/***/ },\n/* 7 */\n/***/ function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_7__;\n\n/***/ },\n/* 8 */\n/***/ function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_8__;\n\n/***/ }\n/******/ ])});;\n\n\n/** WEBPACK FOOTER **\n ** fenix-ui-bridge.min.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 984e2869dd5c19f2f5b6\n **/","if (typeof define !== 'function') {\r\n    var define = require('amdefine')(module);\r\n}\r\n\r\ndefine([\r\n    '../config/config',\r\n    'jquery',\r\n    'underscore',\r\n    'q',\r\n    'loglevel',\r\n    'object-hash',\r\n    'amplify-store'\r\n], function (C, $, _, Q, log, Hash, amplify) {\r\n\r\n    'use strict';\r\n\r\n    function Bridge(o) {\r\n        var obj = o || {};\r\n        this.cache_db = {};\r\n        this.environment = obj.environment || 'production';\r\n        this.ENVIR = this.environment.toUpperCase();\r\n        this.USE_CACHE = obj.cache;\r\n        this.SERVICE_PROVIDER = C['serviceProvider' + capitalizeFirstLetter(this.ENVIR.toLowerCase())];\r\n        if (!this.SERVICE_PROVIDER) {\r\n            alert(this.environment + \" is not a valid FENIX environment: [develop, production, demo, wiews]\");\r\n        }\r\n\r\n        function capitalizeFirstLetter(string) {\r\n            return string.charAt(0).toUpperCase() + string.slice(1);\r\n        }\r\n    }\r\n\r\n    Bridge.prototype.find = function (obj) {\r\n\r\n        var key = _.extend({\r\n                type: \"find\",\r\n                environment: this.ENVIR\r\n            }, obj),\r\n            cached = this._getCacheItem(key),\r\n            self = this;\r\n\r\n        if (this.USE_CACHE && cached) {\r\n\r\n            return Q.promise(function (resolve) {\r\n                return resolve(cached);\r\n            });\r\n        }\r\n\r\n        var serviceProvider = obj.SERVICE_PROVIDER || this.SERVICE_PROVIDER,\r\n            filterService = obj.findService || C.findService,\r\n            body = obj.body;\r\n\r\n        return Q($.ajax({\r\n            url: serviceProvider + filterService + this._parseQueryParams(obj.params),\r\n            type: obj.type || \"POST\",\r\n            contentType: obj.dataType || \"application/json\",\r\n            data: JSON.stringify(body),\r\n            dataType: obj.dataType || 'json'\r\n        })).then(function (data) {\r\n\r\n            self._setCacheItem(key, data ? data : null);\r\n\r\n            return Q.promise(function (resolve, reject, notify) {\r\n                return resolve(self._getCacheItem(key));\r\n            });\r\n\r\n        }, function (error) {\r\n\r\n            return Q.promise(function (resolve, reject, notify) {\r\n                return reject(error);\r\n            });\r\n\r\n        });\r\n    };\r\n\r\n    Bridge.prototype.deleteMetadata = function(obj) {\r\n        var serviceProvider = obj.SERVICE_PROVIDER || this.SERVICE_PROVIDER,\r\n            deleteService = obj.metadataService || C.metadataService;\r\n\r\n        return Q($.ajax({\r\n            url: serviceProvider + deleteService + this._parseUidAndVersion(obj, true),\r\n            type: obj.type || \"DELETE\",\r\n            // Datatype changed to text as the server returns an empty response,\r\n            // setting it to json would trigger an error on success\r\n            dataType: 'text'\r\n\r\n        })).then(function (data) {\r\n            return Q.promise(function (resolve, reject, notify) {\r\n                return resolve(data);\r\n            });\r\n        }, function (error) {\r\n            return Q.promise(function (resolve, reject, notify) {\r\n                return reject(error);\r\n            });\r\n\r\n        });\r\n    };\r\n\r\n    Bridge.prototype.deleteResource = function(obj) {\r\n\r\n        var serviceProvider = obj.SERVICE_PROVIDER || this.SERVICE_PROVIDER,\r\n            deleteService = obj.resourcesService || C.resourcesService;\r\n\r\n        return Q($.ajax({\r\n            url: serviceProvider + deleteService + this._parseUidAndVersion(obj, true),\r\n            type: obj.type || \"DELETE\",\r\n            // Datatype changed to text as the server returns an empty response,\r\n            // setting it to json would trigger an error on success\r\n            dataType: 'text'\r\n\r\n        })).then(function (data) {\r\n            return Q.promise(function (resolve, reject, notify) {\r\n                return resolve(data);\r\n            });\r\n        }, function (error) {\r\n            return Q.promise(function (resolve, reject, notify) {\r\n                return reject(error);\r\n            });\r\n\r\n        });\r\n    };\r\n\r\n    Bridge.prototype._protoSaveUpdate = function(service, type, obj) {\r\n        var serviceProvider = obj.SERVICE_PROVIDER || this.SERVICE_PROVIDER,\r\n            saveService = service,\r\n            body = obj.body,\r\n            type = obj.type || type;\r\n\r\n        return Q($.ajax({\r\n            contentType: obj.contentType || 'application/json',\r\n            url: serviceProvider + saveService,\r\n            type: type,\r\n            data: JSON.stringify(body),\r\n            dataType: obj.dataType || 'json'\r\n        })).then(function (data) {\r\n            return Q.promise(function (resolve, reject, notify) {\r\n                return resolve(data);\r\n            });\r\n        }, function (error) {\r\n            return Q.promise(function (resolve, reject, notify) {\r\n                return reject(error);\r\n            });\r\n\r\n        });\r\n\r\n    };\r\n\r\n    Bridge.prototype.saveMetadata = function (obj) {\r\n        var saveService = obj.metadataService || C.metadataService;\r\n        return this._protoSaveUpdate(saveService, \"POST\", obj);\r\n    };\r\n\r\n    Bridge.prototype.saveDSD = function (obj) {\r\n        var saveService = obj.dsdService || C.dsdService;\r\n        return this._protoSaveUpdate(saveService, \"POST\", obj);\r\n    };\r\n\r\n    Bridge.prototype.saveData = function (obj) {\r\n        var saveService = obj.resourcesService || C.resourcesService;\r\n        return this._protoSaveUpdate(saveService, \"POST\", obj);\r\n    };\r\n\r\n    Bridge.prototype.updateDSD = function (obj) {\r\n        var saveService = obj.dsdService || C.dsdService;\r\n        return this._protoSaveUpdate(saveService, \"PUT\", obj);\r\n    };\r\n\r\n    Bridge.prototype.updateData = function (obj) {\r\n        var saveService = obj.resourcesService || C.resourcesService;\r\n        return this._protoSaveUpdate(saveService, \"PUT\", obj);\r\n    };\r\n\r\n    Bridge.prototype.deleteData = function (obj) {\r\n        var saveService = obj.resourcesService || C.resourcesService;\r\n        obj.body.data = [];\r\n        return this._protoSaveUpdate(saveService, \"PUT\", obj);\r\n    };\r\n\r\n    Bridge.prototype.updateMetadata = function (obj) {\r\n        var saveService = obj.metadataService || C.metadataService;\r\n        if (obj.dsdRid) {\r\n            obj.body.dsd = {\r\n                'rid' : obj.dsdRid\r\n            }\r\n        }\r\n        return this._protoSaveUpdate(saveService, \"PUT\", obj);\r\n    };\r\n\r\n    Bridge.prototype.getColumnDistinctValues = function (obj) {\r\n\r\n        var key = _.extend({\r\n                type: \"distinct\",\r\n                environment: this.ENVIR\r\n            }, obj),\r\n            cached = this._getCacheItem(key),\r\n            self = this;\r\n\r\n        if (this.USE_CACHE && cached) {\r\n            return Q.promise(function (resolve) {\r\n                return resolve(cached);\r\n            });\r\n        }\r\n\r\n        var serviceProvider = obj.serviceProvider || this.SERVICE_PROVIDER,\r\n            columnDistinctValues = obj.columnDistinctValues  || C.columnDistinctValues,\r\n            url = serviceProvider + columnDistinctValues + this._parseUidAndVersion(obj, false) +\"/\"+ obj.columnId;\r\n\r\n        return Q($.ajax({\r\n            url: url,\r\n            type: obj.type || \"GET\",\r\n            dataType: obj.dataType || 'json'\r\n        })).then(function (data) {\r\n\r\n            self._setCacheItem(key, data ? data : null);\r\n\r\n            return Q.promise(function (resolve, reject, notify) {\r\n                return resolve(self._getCacheItem(key));\r\n            });\r\n\r\n        }, function (error) {\r\n\r\n            return Q.promise(function (resolve, reject, notify) {\r\n                return reject(error);\r\n            });\r\n\r\n        });\r\n    };\r\n\r\n    Bridge.prototype.getEnumeration = function (obj) {\r\n\r\n        var key = _.extend({\r\n                type: \"enumeration\",\r\n                environment: this.ENVIR\r\n            }, obj),\r\n            cached = this._getCacheItem(key),\r\n            self = this;\r\n\r\n        if (this.USE_CACHE && cached) {\r\n            return Q.promise(function (resolve) {\r\n                return resolve(cached);\r\n            });\r\n        }\r\n\r\n        var serviceProvider = obj.serviceProvider || this.SERVICE_PROVIDER,\r\n            enumerationService = obj.enumerationService || C.enumerationService;\r\n\r\n        return Q($.ajax({\r\n            url: serviceProvider + enumerationService + obj.uid,\r\n            type: obj.type || \"GET\",\r\n            dataType: obj.dataType || 'json'\r\n        })).then(function (data) {\r\n\r\n            self._setCacheItem(key, data ? data : null);\r\n\r\n            return Q.promise(function (resolve, reject, notify) {\r\n                return resolve(self._getCacheItem(key));\r\n            });\r\n\r\n        }, function (error) {\r\n\r\n            return Q.promise(function (resolve, reject, notify) {\r\n                return reject(error);\r\n            });\r\n\r\n        });\r\n    };\r\n\r\n    Bridge.prototype.getCodeList = function (obj) {\r\n\r\n        var key = _.extend({\r\n                type: \"codelist\",\r\n                environment: this.ENVIR\r\n            }, obj),\r\n            cached = this._getCacheItem(key),\r\n            self = this;\r\n\r\n        if (this.USE_CACHE && cached) {\r\n            return Q.promise(function (resolve) {\r\n                return resolve(cached);\r\n            });\r\n        }\r\n\r\n        var serviceProvider = obj.serviceProvider || this.SERVICE_PROVIDER,\r\n            codeListService = obj.codeListService || C.codelistService,\r\n            body = obj.body;\r\n\r\n        return Q($.ajax({\r\n            url: serviceProvider + codeListService + this._parseQueryParams(obj.params),\r\n            type: obj.type || \"POST\",\r\n            dataType: obj.dataType || 'json',\r\n            contentType: obj.contentType || \"application/json\",\r\n            data: JSON.stringify(body)\r\n        })).then(function (data) {\r\n\r\n            self._setCacheItem(key, data ? data : null);\r\n\r\n            return Q.promise(function (resolve, reject, notify) {\r\n                return resolve(self._getCacheItem(key));\r\n            });\r\n\r\n        }, function (error) {\r\n\r\n            return Q.promise(function (resolve, reject, notify) {\r\n                return reject(error);\r\n            });\r\n\r\n        });\r\n\r\n    };\r\n\r\n    Bridge.prototype.getResource = function (obj) {\r\n\r\n        var key = _.extend({\r\n                type: \"resource\",\r\n                environment: this.ENVIR\r\n            }, obj),\r\n            cached = this._getCacheItem(key),\r\n            self = this;\r\n\r\n        if (this.USE_CACHE && cached) {\r\n            return Q.promise(function (resolve) {\r\n                return resolve(cached);\r\n            });\r\n        }\r\n\r\n        var serviceProvider = obj.serviceProvider || this.SERVICE_PROVIDER,\r\n            processesService = obj.processesService || C.resourcesService,\r\n            url = serviceProvider + processesService + this._parseUidAndVersion(obj, true) + this._parseQueryParams(obj.params);\r\n\r\n        return Q($.ajax({\r\n            url: url,\r\n            type: obj.type || \"GET\",\r\n            contentType: obj.contentType || \"application/json\",\r\n            data: JSON.stringify(obj.body)\r\n        })).then(function (data) {\r\n\r\n            self._setCacheItem(key, data ? data : null);\r\n\r\n            return Q.promise(function (resolve, reject, notify) {\r\n                return resolve(self._getCacheItem(key));\r\n            });\r\n\r\n        }, function (error) {\r\n\r\n            return Q.promise(function (resolve, reject, notify) {\r\n                return reject(error);\r\n            });\r\n\r\n        });\r\n    };\r\n\r\n    Bridge.prototype.getProcessedResource = function (obj) {\r\n\r\n        var key = _.extend({\r\n                type: \"process\",\r\n                environment: this.ENVIR\r\n            }, obj),\r\n            cached = this._getCacheItem(key),\r\n            self = this;\r\n\r\n        if (this.USE_CACHE && cached) {\r\n            return Q.promise(function (resolve) {\r\n                return resolve(cached);\r\n            });\r\n        }\r\n\r\n        var serviceProvider = obj.serviceProvider || this.SERVICE_PROVIDER,\r\n            processesService = obj.processesService || C.processesService,\r\n            isMultiResource = obj.hasOwnProperty(\"uid\"),\r\n            url = ( serviceProvider + processesService) + (isMultiResource ? this._parseUidAndVersion(obj, false) : \"\") + this._parseQueryParams(obj.params);\r\n\r\n        return Q($.ajax({\r\n            url: url,\r\n            type: obj.type || \"POST\",\r\n            dataType: obj.dataType || 'json',\r\n            contentType: obj.contentType || \"application/json\",\r\n            data: JSON.stringify(obj.body)\r\n        })).then(function (data) {\r\n\r\n            self._setCacheItem(key, data ? data : null);\r\n\r\n            return Q.promise(function (resolve, reject, notify) {\r\n                return resolve(self._getCacheItem(key));\r\n            });\r\n\r\n        }, function (error) {\r\n\r\n            return Q.promise(function (resolve, reject, notify) {\r\n                return reject(error);\r\n            });\r\n\r\n        });\r\n    };\r\n\r\n    Bridge.prototype.getMetadata = function (obj) {\r\n\r\n        var key = _.extend({\r\n                type: \"metadata\",\r\n                environment: this.ENVIR\r\n            }, obj),\r\n            cached = this._getCacheItem(key),\r\n            self = this;\r\n\r\n        if (this.USE_CACHE && cached) {\r\n            return Q.promise(function (resolve) {\r\n                return resolve(cached);\r\n            });\r\n        }\r\n\r\n        var serviceProvider = obj.serviceProvider || this.SERVICE_PROVIDER,\r\n            processesService = obj.metadataService || C.metadataService;\r\n\r\n        return Q($.ajax({\r\n            url: serviceProvider + processesService + this._parseUidAndVersion(obj, true) + this._parseQueryParams(obj.params),\r\n            type: obj.type || \"GET\",\r\n            dataType: obj.dataType || 'json'\r\n        })).then(function (data) {\r\n\r\n            self._setCacheItem(key, data ? data : null);\r\n\r\n            return Q.promise(function (resolve, reject, notify) {\r\n                return resolve(self._getCacheItem(key));\r\n            });\r\n\r\n        }, function (error) {\r\n\r\n            return Q.promise(function (resolve, reject, notify) {\r\n                return reject(error);\r\n            });\r\n\r\n        });\r\n\r\n    };\r\n\r\n    Bridge.prototype.export = function (payload, obj) {\r\n\r\n        var serviceProvider = (obj && obj.serviceProvider) || this.SERVICE_PROVIDER;\r\n        var url = '';\r\n        if((obj!=null)&&(typeof obj!='undefined')&&(obj.params!=null)&&(typeof obj.params!='undefined')) {\r\n            url = serviceProvider + (C.exportService)+  this._parseQueryParams(obj.params);}\r\n        else{\r\n            url = serviceProvider + (C.exportService);}\r\n\r\n        return Q($.ajax({\r\n            url: url,\r\n            type: \"POST\",\r\n            contentType: \"application/json\",\r\n            data: JSON.stringify(payload)\r\n\r\n        })).then(function (data) {\r\n            var object = {'data': data, 'url': url};\r\n            return Q.promise(function (resolve, reject, notify) {\r\n                return resolve(object);\r\n            });\r\n\r\n        }, function (error) {\r\n            return Q.promise(function (resolve, reject, notify) {\r\n                return resolve(error);\r\n            });\r\n        });\r\n\r\n    };\r\n\r\n\r\n    Bridge.prototype.exportFlow = function (payload, obj) {\r\n\r\n        var serviceProvider = (obj && obj.serviceProvider) || this.SERVICE_PROVIDER,\r\n         url = serviceProvider + (C.exportFlow) + this._parseQueryParams(obj.params) ;\r\n\r\n        return Q($.ajax({\r\n            url: url,\r\n            type: \"POST\",\r\n            contentType: \"application/json\",\r\n            data: JSON.stringify(payload),\r\n            dataType:\"text\"\r\n\r\n        })).then(function (data) {\r\n            var object = {'data': data, 'url': url};\r\n            return Q.promise(function (resolve, reject, notify) {\r\n                return resolve(object);\r\n            });\r\n\r\n        }, function (error) {\r\n            return Q.promise(function (resolve, reject, notify) {\r\n                return resolve(error);\r\n            });\r\n        });\r\n\r\n    };\r\n\r\n    Bridge.prototype.exportStreaming = function (payload, obj) {\r\n\r\n        var serviceProvider = (obj && obj.serviceProvider) || this.SERVICE_PROVIDER,\r\n            url = serviceProvider + (C.exportStreaming) + this._parseQueryParams(obj.params) ;\r\n\r\n        return Q($.ajax({\r\n            url: url,\r\n            type: \"POST\",\r\n            contentType: \"application/json\",\r\n            data: JSON.stringify(payload),\r\n            dataType:\"text\"\r\n\r\n\r\n        })).then(function (data) {\r\n            var object = {'data': data, 'url': url};\r\n            return Q.promise(function (resolve, reject, notify) {\r\n                return resolve(object);\r\n            });\r\n\r\n        }, function (error) {\r\n            return Q.promise(function (resolve, reject, notify) {\r\n                return resolve(error);\r\n            });\r\n        });\r\n\r\n    };\r\n\r\n    Bridge.prototype.getMDSD = function (opts) {\r\n\r\n        var obj = opts || {},\r\n            key = _.extend({\r\n                type: \"mdsd\",\r\n                environment: this.ENVIR\r\n            }, obj),\r\n            cached = this._getCacheItem(key),\r\n            self = this;\r\n\r\n        if (this.USE_CACHE && cached) {\r\n            return Q.promise(function (resolve) {\r\n                return resolve(cached);\r\n            });\r\n        }\r\n\r\n        var serviceProvider = obj.serviceProvider || this.SERVICE_PROVIDER,\r\n            mdsdService = obj.mdsdService || C.mdsdService,\r\n            url = serviceProvider + mdsdService + this._parseQueryParams(obj.params);\r\n\r\n        return Q($.ajax({\r\n            url: url,\r\n            type: obj.type || \"GET\",\r\n            dataType: obj.dataType || 'json'\r\n        })).then(function (data) {\r\n\r\n            self._setCacheItem(key, data ? data : null);\r\n\r\n            return Q.promise(function (resolve, reject, notify) {\r\n                return resolve(self._getCacheItem(key));\r\n            });\r\n\r\n        }, function (error) {\r\n\r\n            return Q.promise(function (resolve, reject, notify) {\r\n                return reject(error);\r\n            });\r\n\r\n        });\r\n\r\n    };\r\n\r\n    Bridge.prototype.all = function (promises) {\r\n\r\n        return Q.all(promises);\r\n    };\r\n\r\n    Bridge.prototype.getCacheKey = function (obj) {\r\n\r\n        return this._getCacheKey(obj);\r\n    };\r\n\r\n    Bridge.prototype._parseQueryParams = function (params) {\r\n\r\n        if (!params) {\r\n            return '';\r\n        }\r\n\r\n        var result = '?';\r\n\r\n        _.each(params, function (value, key) {\r\n            result += key + '=' + value + '&'\r\n        });\r\n\r\n        return result.substring(0, result.length - 1);\r\n\r\n    };\r\n\r\n    Bridge.prototype._parseUidAndVersion = function (params, appendUid) {\r\n\r\n        var result = '',\r\n            versionFound = false;\r\n\r\n        if (!params.uid) {\r\n            log.warn(\"Impossible to find uid\")\r\n        }\r\n\r\n        result = result.concat(params.uid);\r\n\r\n        if (!!params.version) {\r\n            result = result.concat(\"/\").concat(params.version);\r\n            versionFound = true;\r\n        }\r\n\r\n        return (appendUid === true && versionFound !== true) ? 'uid/' + result : result;\r\n\r\n    };\r\n\r\n    Bridge.prototype._setCacheItem = function (obj, value) {\r\n\r\n        var key = this.getCacheKey(obj);\r\n\r\n        try {\r\n            amplify.sessionStorage(key, value)\r\n        } catch (e) {\r\n\r\n            this.cache_db[key] = value;\r\n        }\r\n\r\n        return this._getCacheItem(key);\r\n    };\r\n\r\n    Bridge.prototype._getCacheItem = function (obj) {\r\n\r\n        var key = this.getCacheKey(obj),\r\n            item = amplify.sessionStorage(key);\r\n\r\n        return item ? item : this.cache_db[key];\r\n\r\n    };\r\n\r\n    Bridge.prototype._getCacheKey = function (obj) {\r\n\r\n        var key = Hash(obj);\r\n\r\n        return key;\r\n\r\n    };\r\n\r\n    return Bridge;\r\n\r\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/js/index.js\n ** module id = 1\n ** module chunks = 0\n **/","if (typeof define !== 'function') {\r\n    var define = require('amdefine')(module);\r\n}\r\n\r\ndefine(function () {\r\n\r\n    'use strict';\r\n\r\n    var serverDevelop = '//fenix.fao.org/',\r\n        serverProduction = '//fenixservices.fao.org/',\r\n        serverDemo = '//fenix.fao.org/',\r\n        serverWiewsQA = '//www.fao.org/fenix/wiews/api/',\r\n        serverWiewsProduction = '//www-test.fao.org/fenix/wiews/api/';\r\n\r\n\r\n    return {\r\n\r\n        //Bridge\r\n        serviceProviderProduction : serverProduction + \"d3s/\",\r\n        serviceProviderDevelop : serverDevelop + \"d3s_dev/\",\r\n        serviceProviderDemo : serverDemo + \"d3s/\",\r\n        serviceProviderWiews : serverDemo + \"d3s_wiews/\",\r\n        serviceProviderWiews_qa : serverWiewsQA + \"d3s/\",\r\n        serviceProviderWiews_production : serverWiewsProduction + \"d3s/\",\r\n        exportService :\"/fenix/export\",\r\n        exportFlow :\"/export/flow\",\r\n        exportStreaming :\"/export/\",\r\n        findService : \"msd/resources/find\",\r\n        codelistService: 'msd/codes/filter',\r\n        enumerationService: 'msd/choices/',\r\n        processesService : \"processes/\",\r\n        metadataService : \"msd/resources/metadata/\",\r\n        dsdService : \"msd/resources/dsd\",\r\n        resourcesService : \"msd/resources/\",\r\n        mdsdService : \"mdsd/\",\r\n        columnDistinctValues : \"dataset/distinct/\",\r\n\r\n        cache : true\r\n    }\r\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/config/config.js\n ** module id = 2\n ** module chunks = 0\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_3__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"jquery\"\n ** module id = 3\n ** module chunks = 0\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_4__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"underscore\"\n ** module id = 4\n ** module chunks = 0\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_5__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"q\"\n ** module id = 5\n ** module chunks = 0\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_6__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"loglevel\"\n ** module id = 6\n ** module chunks = 0\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_7__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"object-hash\"\n ** module id = 7\n ** module chunks = 0\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_8__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"amplify-store\"\n ** module id = 8\n ** module chunks = 0\n **/"],"sourceRoot":""}
{"version":3,"sources":["webpack:///fenix-ui-bridge.min.js","webpack:///webpack/bootstrap ac4c2840de1ad99896c5","webpack:///./src/js/index.js","webpack:///./src/config/config.js","webpack:///external \"jquery\"","webpack:///external \"underscore\"","webpack:///external \"q\"","webpack:///external \"loglevel\"","webpack:///external \"object-hash\"","webpack:///external \"amplify-store\""],"names":["define","__WEBPACK_EXTERNAL_MODULE_3__","__WEBPACK_EXTERNAL_MODULE_4__","__WEBPACK_EXTERNAL_MODULE_5__","__WEBPACK_EXTERNAL_MODULE_6__","__WEBPACK_EXTERNAL_MODULE_7__","__WEBPACK_EXTERNAL_MODULE_8__","modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","C","$","_","Q","log","Hash","amplify","Bridge","o","capitalizeFirstLetter","string","charAt","toUpperCase","slice","obj","this","cache_db","environment","ENVIR","USE_CACHE","cache","SERVICE_PROVIDER","serviceProvider","toLowerCase","extra","info","alert","prototype","find","key","extend","type","cached","_getCacheItem","self","promise","resolve","filterService","findService","body","ajax","url","_parseQueryParams","params","contentType","dataType","data","JSON","stringify","then","_setCacheItem","reject","notify","error","deleteMetadata","deleteService","metadataService","_parseUidAndVersion","deleteResource","resourcesService","_protoSaveUpdate","service","saveService","saveMetadata","saveDSD","dsdService","saveData","updateDSD","updateData","deleteData","updateMetadata","dsdRid","dsd","rid","getColumnDistinctValues","columnDistinctValues","columnId","getEnumeration","enumerationService","uid","getCodeList","codeListService","codelistService","getResource","processesService","getProcessedResource","isMultiResource","hasOwnProperty","getMetadata","payload","object","exportFlow","exportStreaming","getMDSD","opts","mdsdService","all","promises","getCacheKey","_getCacheKey","result","each","value","substring","length","appendUid","versionFound","warn","concat","version","sessionStorage","e","item","apply","undefined","serverDevelop","serverProduction","serverDemo","serverGIFT","serverWiewsQA","serverWiewsProduction","serviceProviderProduction","serviceProviderDevelop","serviceProviderDemo","serviceProviderGift","serviceProviderWiews","serviceProviderWiews_qa","serviceProviderWiews_production","exportService"],"mappings":"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","file":"fenix-ui-bridge.min.js","sourcesContent":["define([\"jquery\",\"underscore\",\"q\",\"loglevel\",\"object-hash\",\"amplify-store\"], function(__WEBPACK_EXTERNAL_MODULE_3__, __WEBPACK_EXTERNAL_MODULE_4__, __WEBPACK_EXTERNAL_MODULE_5__, __WEBPACK_EXTERNAL_MODULE_6__, __WEBPACK_EXTERNAL_MODULE_7__, __WEBPACK_EXTERNAL_MODULE_8__) { return /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__(1);\n\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;if (false) {\n\t    var define = require('amdefine')(module);\n\t}\n\t\n\t!(__WEBPACK_AMD_DEFINE_ARRAY__ = [\n\t    __webpack_require__(2),\n\t    __webpack_require__(3),\n\t    __webpack_require__(4),\n\t    __webpack_require__(5),\n\t    __webpack_require__(6),\n\t    __webpack_require__(7),\n\t    __webpack_require__(8)\n\t], __WEBPACK_AMD_DEFINE_RESULT__ = function (C, $, _, Q, log, Hash, amplify) {\n\t\n\t    'use strict';\n\t\n\t    function Bridge(o) {\n\t        var obj = o || {};\n\t\n\t        this.cache_db = {};\n\t        this.environment = obj.environment || 'production';\n\t        this.ENVIR = this.environment.toUpperCase();\n\t        this.USE_CACHE = obj.cache;\n\t        this.SERVICE_PROVIDER = obj.serviceProvider || C['serviceProvider' + capitalizeFirstLetter(this.ENVIR.toLowerCase())];\n\t        this.extra = obj.extra;\n\t\n\t        log.info(\"Extra is \" + this.extra);\n\t\n\t        if (!this.SERVICE_PROVIDER) {\n\t            alert(this.environment + \" is not a valid FENIX environment: [develop, production, demo, wiews, gift]\");\n\t        }\n\t\n\t        function capitalizeFirstLetter(string) {\n\t            return string.charAt(0).toUpperCase() + string.slice(1);\n\t        }\n\t    }\n\t\n\t    Bridge.prototype.find = function (obj) {\n\t\n\t        var key = _.extend({\n\t                type: \"find\",\n\t                environment: this.ENVIR\n\t            }, obj),\n\t            cached = this._getCacheItem(key),\n\t            self = this;\n\t\n\t        if (this.USE_CACHE && cached) {\n\t\n\t            return Q.promise(function (resolve) {\n\t                return resolve(cached);\n\t            });\n\t        }\n\t\n\t        var serviceProvider = obj.SERVICE_PROVIDER || this.SERVICE_PROVIDER,\n\t            filterService = obj.findService || C.findService,\n\t            body = obj.body;\n\t\n\t        if (this.extra) _.extend(body, this.extra);\n\t\n\t        return Q($.ajax({\n\t            url: serviceProvider + filterService + this._parseQueryParams(obj.params),\n\t            type: obj.type || \"POST\",\n\t            contentType: obj.dataType || \"application/json\",\n\t            data: JSON.stringify(body),\n\t            dataType: obj.dataType || 'json'\n\t        })).then(function (data) {\n\t\n\t            self._setCacheItem(key, data ? data : null);\n\t\n\t            return Q.promise(function (resolve, reject, notify) {\n\t                return resolve(self._getCacheItem(key));\n\t            });\n\t\n\t        }, function (error) {\n\t\n\t            return Q.promise(function (resolve, reject, notify) {\n\t                return reject(error);\n\t            });\n\t\n\t        });\n\t    };\n\t\n\t    Bridge.prototype.deleteMetadata = function(obj) {\n\t        var serviceProvider = obj.SERVICE_PROVIDER || this.SERVICE_PROVIDER,\n\t            deleteService = obj.metadataService || C.metadataService;\n\t\n\t        return Q($.ajax({\n\t            url: serviceProvider + deleteService + this._parseUidAndVersion(obj, true),\n\t            type: obj.type || \"DELETE\",\n\t            // Datatype changed to text as the server returns an empty response,\n\t            // setting it to json would trigger an error on success\n\t            dataType: 'text'\n\t\n\t        })).then(function (data) {\n\t            return Q.promise(function (resolve, reject, notify) {\n\t                return resolve(data);\n\t            });\n\t        }, function (error) {\n\t            return Q.promise(function (resolve, reject, notify) {\n\t                return reject(error);\n\t            });\n\t\n\t        });\n\t    };\n\t\n\t    Bridge.prototype.deleteResource = function(obj) {\n\t\n\t        var serviceProvider = obj.SERVICE_PROVIDER || this.SERVICE_PROVIDER,\n\t            deleteService = obj.resourcesService || C.resourcesService;\n\t\n\t        return Q($.ajax({\n\t            url: serviceProvider + deleteService + this._parseUidAndVersion(obj, true),\n\t            type: obj.type || \"DELETE\",\n\t            // Datatype changed to text as the server returns an empty response,\n\t            // setting it to json would trigger an error on success\n\t            dataType: 'text'\n\t\n\t        })).then(function (data) {\n\t            return Q.promise(function (resolve, reject, notify) {\n\t                return resolve(data);\n\t            });\n\t        }, function (error) {\n\t            return Q.promise(function (resolve, reject, notify) {\n\t                return reject(error);\n\t            });\n\t\n\t        });\n\t    };\n\t\n\t    Bridge.prototype._protoSaveUpdate = function(service, type, obj) {\n\t        var serviceProvider = obj.SERVICE_PROVIDER || this.SERVICE_PROVIDER,\n\t            saveService = service,\n\t            body = obj.body,\n\t            type = obj.type || type;\n\t\n\t        if (this.extra) _.extend(body, this.extra);\n\t\n\t        return Q($.ajax({\n\t            contentType: obj.contentType || 'application/json',\n\t            url: serviceProvider + saveService,\n\t            type: type,\n\t            data: JSON.stringify(body),\n\t            dataType: obj.dataType || 'json'\n\t        })).then(function (data) {\n\t            return Q.promise(function (resolve, reject, notify) {\n\t                return resolve(data);\n\t            });\n\t        }, function (error) {\n\t            return Q.promise(function (resolve, reject, notify) {\n\t                return reject(error);\n\t            });\n\t\n\t        });\n\t\n\t    };\n\t\n\t    Bridge.prototype.saveMetadata = function (obj) {\n\t        var saveService = obj.metadataService || C.metadataService;\n\t        return this._protoSaveUpdate(saveService, \"POST\", obj);\n\t    };\n\t\n\t    Bridge.prototype.saveDSD = function (obj) {\n\t        var saveService = obj.dsdService || C.dsdService;\n\t        return this._protoSaveUpdate(saveService, \"POST\", obj);\n\t    };\n\t\n\t    Bridge.prototype.saveData = function (obj) {\n\t        var saveService = obj.resourcesService || C.resourcesService;\n\t        return this._protoSaveUpdate(saveService, \"POST\", obj);\n\t    };\n\t\n\t    Bridge.prototype.updateDSD = function (obj) {\n\t        var saveService = obj.dsdService || C.dsdService;\n\t        return this._protoSaveUpdate(saveService, \"PUT\", obj);\n\t    };\n\t\n\t    Bridge.prototype.updateData = function (obj) {\n\t        var saveService = obj.resourcesService || C.resourcesService;\n\t        return this._protoSaveUpdate(saveService, \"PUT\", obj);\n\t    };\n\t\n\t    Bridge.prototype.deleteData = function (obj) {\n\t        var saveService = obj.resourcesService || C.resourcesService;\n\t        obj.body.data = [];\n\t        return this._protoSaveUpdate(saveService, \"PUT\", obj);\n\t    };\n\t\n\t    Bridge.prototype.updateMetadata = function (obj) {\n\t        var saveService = obj.metadataService || C.metadataService;\n\t        if (obj.dsdRid) {\n\t            obj.body.dsd = {\n\t                'rid' : obj.dsdRid\n\t            }\n\t        }\n\t        return this._protoSaveUpdate(saveService, \"PUT\", obj);\n\t    };\n\t\n\t    Bridge.prototype.getColumnDistinctValues = function (obj) {\n\t\n\t        var key = _.extend({\n\t                type: \"distinct\",\n\t                environment: this.ENVIR\n\t            }, obj),\n\t            cached = this._getCacheItem(key),\n\t            self = this;\n\t\n\t        if (this.USE_CACHE && cached) {\n\t            return Q.promise(function (resolve) {\n\t                return resolve(cached);\n\t            });\n\t        }\n\t\n\t        var serviceProvider = obj.serviceProvider || this.SERVICE_PROVIDER,\n\t            columnDistinctValues = obj.columnDistinctValues  || C.columnDistinctValues,\n\t            url = serviceProvider + columnDistinctValues + this._parseUidAndVersion(obj, false) +\"/\"+ obj.columnId;\n\t\n\t        return Q($.ajax({\n\t            url: url,\n\t            type: obj.type || \"GET\",\n\t            dataType: obj.dataType || 'json'\n\t        })).then(function (data) {\n\t\n\t            self._setCacheItem(key, data ? data : null);\n\t\n\t            return Q.promise(function (resolve, reject, notify) {\n\t                return resolve(self._getCacheItem(key));\n\t            });\n\t\n\t        }, function (error) {\n\t\n\t            return Q.promise(function (resolve, reject, notify) {\n\t                return reject(error);\n\t            });\n\t\n\t        });\n\t    };\n\t\n\t    Bridge.prototype.getEnumeration = function (obj) {\n\t\n\t        var key = _.extend({\n\t                type: \"enumeration\",\n\t                environment: this.ENVIR\n\t            }, obj),\n\t            cached = this._getCacheItem(key),\n\t            self = this;\n\t\n\t        if (this.USE_CACHE && cached) {\n\t            return Q.promise(function (resolve) {\n\t                return resolve(cached);\n\t            });\n\t        }\n\t\n\t        var serviceProvider = obj.serviceProvider || this.SERVICE_PROVIDER,\n\t            enumerationService = obj.enumerationService || C.enumerationService;\n\t\n\t        return Q($.ajax({\n\t            url: serviceProvider + enumerationService + obj.uid,\n\t            type: obj.type || \"GET\",\n\t            dataType: obj.dataType || 'json'\n\t        })).then(function (data) {\n\t\n\t            self._setCacheItem(key, data ? data : null);\n\t\n\t            return Q.promise(function (resolve, reject, notify) {\n\t                return resolve(self._getCacheItem(key));\n\t            });\n\t\n\t        }, function (error) {\n\t\n\t            return Q.promise(function (resolve, reject, notify) {\n\t                return reject(error);\n\t            });\n\t\n\t        });\n\t    };\n\t\n\t    Bridge.prototype.getCodeList = function (obj) {\n\t\n\t        var key = _.extend({\n\t                type: \"codelist\",\n\t                environment: this.ENVIR\n\t            }, obj),\n\t            cached = this._getCacheItem(key),\n\t            self = this;\n\t\n\t        if (this.USE_CACHE && cached) {\n\t            return Q.promise(function (resolve) {\n\t                return resolve(cached);\n\t            });\n\t        }\n\t\n\t        var serviceProvider = obj.serviceProvider || this.SERVICE_PROVIDER,\n\t            codeListService = obj.codeListService || C.codelistService,\n\t            body = obj.body;\n\t\n\t        if (this.extra) _.extend(body, this.extra);\n\t\n\t        return Q($.ajax({\n\t            url: serviceProvider + codeListService + this._parseQueryParams(obj.params),\n\t            type: obj.type || \"POST\",\n\t            dataType: obj.dataType || 'json',\n\t            contentType: obj.contentType || \"application/json\",\n\t            data: JSON.stringify(body)\n\t        })).then(function (data) {\n\t\n\t            self._setCacheItem(key, data ? data : null);\n\t\n\t            return Q.promise(function (resolve, reject, notify) {\n\t                return resolve(self._getCacheItem(key));\n\t            });\n\t\n\t        }, function (error) {\n\t\n\t            return Q.promise(function (resolve, reject, notify) {\n\t                return reject(error);\n\t            });\n\t\n\t        });\n\t\n\t    };\n\t\n\t    Bridge.prototype.getResource = function (obj) {\n\t\n\t        var key = _.extend({\n\t                type: \"resource\",\n\t                environment: this.ENVIR\n\t            }, obj),\n\t            cached = this._getCacheItem(key),\n\t            self = this,\n\t            body = obj.body;\n\t\n\t        if (this.extra) _.extend(body, this.extra);\n\t\n\t        if (this.USE_CACHE && cached) {\n\t            return Q.promise(function (resolve) {\n\t                return resolve(cached);\n\t            });\n\t        }\n\t\n\t        var serviceProvider = obj.serviceProvider || this.SERVICE_PROVIDER,\n\t            processesService = obj.processesService || C.resourcesService,\n\t            url = serviceProvider + processesService + this._parseUidAndVersion(obj, true) + this._parseQueryParams(obj.params);\n\t\n\t        return Q($.ajax({\n\t            url: url,\n\t            type: obj.type || \"GET\",\n\t            contentType: obj.contentType || \"application/json\",\n\t            data: JSON.stringify(body)\n\t        })).then(function (data) {\n\t\n\t            self._setCacheItem(key, data ? data : null);\n\t\n\t            return Q.promise(function (resolve, reject, notify) {\n\t                return resolve(self._getCacheItem(key));\n\t            });\n\t\n\t        }, function (error) {\n\t\n\t            return Q.promise(function (resolve, reject, notify) {\n\t                return reject(error);\n\t            });\n\t\n\t        });\n\t    };\n\t\n\t    Bridge.prototype.getProcessedResource = function (obj) {\n\t\n\t        var key = _.extend({\n\t                type: \"process\",\n\t                environment: this.ENVIR\n\t            }, obj),\n\t            cached = this._getCacheItem(key),\n\t            self = this,\n\t            body = obj.body;\n\t\n\t        if (this.USE_CACHE && cached) {\n\t            return Q.promise(function (resolve) {\n\t                return resolve(cached);\n\t            });\n\t        }\n\t\n\t        if (this.extra) _.extend(body, this.extra);\n\t\n\t        var serviceProvider = obj.serviceProvider || this.SERVICE_PROVIDER,\n\t            processesService = obj.processesService || C.processesService,\n\t            isMultiResource = obj.hasOwnProperty(\"uid\"),\n\t            url = ( serviceProvider + processesService) + (isMultiResource ? this._parseUidAndVersion(obj, false) : \"\") + this._parseQueryParams(obj.params);\n\t\n\t        return Q($.ajax({\n\t            url: url,\n\t            type: obj.type || \"POST\",\n\t            dataType: obj.dataType || 'json',\n\t            contentType: obj.contentType || \"application/json\",\n\t            data: JSON.stringify(body)\n\t        })).then(function (data) {\n\t\n\t            self._setCacheItem(key, data ? data : null);\n\t\n\t            return Q.promise(function (resolve, reject, notify) {\n\t                return resolve(self._getCacheItem(key));\n\t            });\n\t\n\t        }, function (error) {\n\t\n\t            return Q.promise(function (resolve, reject, notify) {\n\t                return reject(error);\n\t            });\n\t\n\t        });\n\t    };\n\t\n\t    Bridge.prototype.getMetadata = function (obj) {\n\t\n\t        var key = _.extend({\n\t                type: \"metadata\",\n\t                environment: this.ENVIR\n\t            }, obj),\n\t            cached = this._getCacheItem(key),\n\t            self = this;\n\t\n\t        if (this.USE_CACHE && cached) {\n\t            return Q.promise(function (resolve) {\n\t                return resolve(cached);\n\t            });\n\t        }\n\t\n\t        var serviceProvider = obj.serviceProvider || this.SERVICE_PROVIDER,\n\t            processesService = obj.metadataService || C.metadataService;\n\t\n\t        return Q($.ajax({\n\t            url: serviceProvider + processesService + this._parseUidAndVersion(obj, true) + this._parseQueryParams(obj.params),\n\t            type: obj.type || \"GET\",\n\t            dataType: obj.dataType || 'json'\n\t        })).then(function (data) {\n\t\n\t            self._setCacheItem(key, data ? data : null);\n\t\n\t            return Q.promise(function (resolve, reject, notify) {\n\t                return resolve(self._getCacheItem(key));\n\t            });\n\t\n\t        }, function (error) {\n\t\n\t            return Q.promise(function (resolve, reject, notify) {\n\t                return reject(error);\n\t            });\n\t\n\t        });\n\t\n\t    };\n\t\n\t    Bridge.prototype.export = function (payload, obj) {\n\t\n\t        var serviceProvider = (obj && obj.serviceProvider) || this.SERVICE_PROVIDER;\n\t        var url = '';\n\t        if((obj!=null)&&(typeof obj!='undefined')&&(obj.params!=null)&&(typeof obj.params!='undefined')) {\n\t            url = serviceProvider + (C.exportService)+  this._parseQueryParams(obj.params);}\n\t        else{\n\t            url = serviceProvider + (C.exportService);}\n\t\n\t        return Q($.ajax({\n\t            url: url,\n\t            type: \"POST\",\n\t            contentType: \"application/json\",\n\t            data: JSON.stringify(payload)\n\t\n\t        })).then(function (data) {\n\t            var object = {'data': data, 'url': url};\n\t            return Q.promise(function (resolve, reject, notify) {\n\t                return resolve(object);\n\t            });\n\t\n\t        }, function (error) {\n\t            return Q.promise(function (resolve, reject, notify) {\n\t                return resolve(error);\n\t            });\n\t        });\n\t\n\t    };\n\t\n\t\n\t    Bridge.prototype.exportFlow = function (payload, obj) {\n\t\n\t        var serviceProvider = (obj && obj.serviceProvider) || this.SERVICE_PROVIDER,\n\t            url = serviceProvider + (C.exportFlow) + this._parseQueryParams(obj.params) ;\n\t\n\t        return Q($.ajax({\n\t            url: url,\n\t            type: \"POST\",\n\t            contentType: \"application/json\",\n\t            data: JSON.stringify(payload),\n\t            dataType:\"text\"\n\t\n\t        })).then(function (data) {\n\t            var object = {'data': data, 'url': url};\n\t            return Q.promise(function (resolve, reject, notify) {\n\t                return resolve(object);\n\t            });\n\t\n\t        }, function (error) {\n\t            return Q.promise(function (resolve, reject, notify) {\n\t                return resolve(error);\n\t            });\n\t        });\n\t\n\t    };\n\t\n\t    Bridge.prototype.exportStreaming = function (payload, obj) {\n\t\n\t        var serviceProvider = (obj && obj.serviceProvider) || this.SERVICE_PROVIDER,\n\t            url = serviceProvider + (C.exportStreaming) + this._parseQueryParams(obj.params) ;\n\t\n\t        return Q($.ajax({\n\t            url: url,\n\t            type: \"POST\",\n\t            contentType: \"application/json\",\n\t            data: JSON.stringify(payload),\n\t            dataType:\"text\"\n\t\n\t\n\t        })).then(function (data) {\n\t            var object = {'data': data, 'url': url};\n\t            return Q.promise(function (resolve, reject, notify) {\n\t                return resolve(object);\n\t            });\n\t\n\t        }, function (error) {\n\t            return Q.promise(function (resolve, reject, notify) {\n\t                return resolve(error);\n\t            });\n\t        });\n\t\n\t    };\n\t\n\t    Bridge.prototype.getMDSD = function (opts) {\n\t\n\t        var obj = opts || {},\n\t            key = _.extend({\n\t                type: \"mdsd\",\n\t                environment: this.ENVIR\n\t            }, obj),\n\t            cached = this._getCacheItem(key),\n\t            self = this;\n\t\n\t        if (this.USE_CACHE && cached) {\n\t            return Q.promise(function (resolve) {\n\t                return resolve(cached);\n\t            });\n\t        }\n\t\n\t        var serviceProvider = obj.serviceProvider || this.SERVICE_PROVIDER,\n\t            mdsdService = obj.mdsdService || C.mdsdService,\n\t            url = serviceProvider + mdsdService + this._parseQueryParams(obj.params);\n\t\n\t        return Q($.ajax({\n\t            url: url,\n\t            type: obj.type || \"GET\",\n\t            dataType: obj.dataType || 'json'\n\t        })).then(function (data) {\n\t\n\t            self._setCacheItem(key, data ? data : null);\n\t\n\t            return Q.promise(function (resolve, reject, notify) {\n\t                return resolve(self._getCacheItem(key));\n\t            });\n\t\n\t        }, function (error) {\n\t\n\t            return Q.promise(function (resolve, reject, notify) {\n\t                return reject(error);\n\t            });\n\t\n\t        });\n\t\n\t    };\n\t\n\t    Bridge.prototype.all = function (promises) {\n\t\n\t        return Q.all(promises);\n\t    };\n\t\n\t    Bridge.prototype.getCacheKey = function (obj) {\n\t\n\t        return this._getCacheKey(obj);\n\t    };\n\t\n\t    Bridge.prototype._parseQueryParams = function (params) {\n\t\n\t        if (!params) {\n\t            return '';\n\t        }\n\t\n\t        var result = '?';\n\t\n\t        _.each(params, function (value, key) {\n\t            result += key + '=' + value + '&'\n\t        });\n\t\n\t        return result.substring(0, result.length - 1);\n\t\n\t    };\n\t\n\t    Bridge.prototype._parseUidAndVersion = function (params, appendUid) {\n\t\n\t        var result = '',\n\t            versionFound = false;\n\t\n\t        if (!params.uid) {\n\t            log.warn(\"Impossible to find uid\")\n\t        }\n\t\n\t        result = result.concat(params.uid);\n\t\n\t        if (!!params.version) {\n\t            result = result.concat(\"/\").concat(params.version);\n\t            versionFound = true;\n\t        }\n\t\n\t        return (appendUid === true && versionFound !== true) ? 'uid/' + result : result;\n\t\n\t    };\n\t\n\t    Bridge.prototype._setCacheItem = function (obj, value) {\n\t\n\t        var key = this.getCacheKey(obj);\n\t\n\t        try {\n\t            amplify.sessionStorage(key, value)\n\t        } catch (e) {\n\t\n\t            this.cache_db[key] = value;\n\t        }\n\t\n\t        return this._getCacheItem(key);\n\t    };\n\t\n\t    Bridge.prototype._getCacheItem = function (obj) {\n\t\n\t        var key = this.getCacheKey(obj),\n\t            item = amplify.sessionStorage(key);\n\t\n\t        return item ? item : this.cache_db[key];\n\t\n\t    };\n\t\n\t    Bridge.prototype._getCacheKey = function (obj) {\n\t\n\t        var key = Hash(obj);\n\t\n\t        return key;\n\t\n\t    };\n\t\n\t    return Bridge;\n\t\n\t}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;if (false) {\n\t    var define = require('amdefine')(module);\n\t}\n\t\n\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function () {\n\t\n\t    'use strict';\n\t\n\t    var serverDevelop = '//fenix.fao.org/',\n\t        serverProduction = '//fenixservices.fao.org/',\n\t        serverDemo = '//fenix.fao.org/',\n\t        serverGIFT = '//fenixservices.fao.org/dev/gift/',\n\t        serverWiewsQA = '//www.fao.org/fenix/wiews/api/',\n\t        serverWiewsProduction = '//www-test.fao.org/fenix/wiews/api/';\n\t\n\t\n\t    return {\n\t\n\t        //Bridge\n\t        serviceProviderProduction : serverProduction + \"d3s/\",\n\t        serviceProviderDevelop : serverDevelop + \"d3s_dev/\",\n\t        serviceProviderDemo : serverDemo + \"d3s/\",\n\t        serviceProviderGift : serverGIFT,\n\t        serviceProviderWiews : serverDemo + \"d3s_wiews/\",\n\t        serviceProviderWiews_qa : serverWiewsQA + \"d3s/\",\n\t        serviceProviderWiews_production : serverWiewsProduction + \"d3s/\",\n\t\n\t        exportService :\"/fenix/export\",\n\t        exportFlow :\"/export/flow\",\n\t        exportStreaming :\"/export/\",\n\t        findService : \"msd/resources/find\",\n\t        codelistService: 'msd/codes/filter',\n\t        enumerationService: 'msd/choices/',\n\t        processesService : \"processes/\",\n\t        metadataService : \"msd/resources/metadata/\",\n\t        dsdService : \"msd/resources/dsd\",\n\t        resourcesService : \"msd/resources/\",\n\t        mdsdService : \"mdsd/\",\n\t        columnDistinctValues : \"dataset/distinct/\",\n\t\n\t        cache : true\n\t    }\n\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n/***/ },\n/* 3 */\n/***/ function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_3__;\n\n/***/ },\n/* 4 */\n/***/ function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_4__;\n\n/***/ },\n/* 5 */\n/***/ function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_5__;\n\n/***/ },\n/* 6 */\n/***/ function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_6__;\n\n/***/ },\n/* 7 */\n/***/ function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_7__;\n\n/***/ },\n/* 8 */\n/***/ function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_8__;\n\n/***/ }\n/******/ ])});;\n\n\n/** WEBPACK FOOTER **\n ** fenix-ui-bridge.min.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap ac4c2840de1ad99896c5\n **/","if (typeof define !== 'function') {\n    var define = require('amdefine')(module);\n}\n\ndefine([\n    '../config/config',\n    'jquery',\n    'underscore',\n    'q',\n    'loglevel',\n    'object-hash',\n    'amplify-store'\n], function (C, $, _, Q, log, Hash, amplify) {\n\n    'use strict';\n\n    function Bridge(o) {\n        var obj = o || {};\n\n        this.cache_db = {};\n        this.environment = obj.environment || 'production';\n        this.ENVIR = this.environment.toUpperCase();\n        this.USE_CACHE = obj.cache;\n        this.SERVICE_PROVIDER = obj.serviceProvider || C['serviceProvider' + capitalizeFirstLetter(this.ENVIR.toLowerCase())];\n        this.extra = obj.extra;\n\n        log.info(\"Extra is \" + this.extra);\n\n        if (!this.SERVICE_PROVIDER) {\n            alert(this.environment + \" is not a valid FENIX environment: [develop, production, demo, wiews, gift]\");\n        }\n\n        function capitalizeFirstLetter(string) {\n            return string.charAt(0).toUpperCase() + string.slice(1);\n        }\n    }\n\n    Bridge.prototype.find = function (obj) {\n\n        var key = _.extend({\n                type: \"find\",\n                environment: this.ENVIR\n            }, obj),\n            cached = this._getCacheItem(key),\n            self = this;\n\n        if (this.USE_CACHE && cached) {\n\n            return Q.promise(function (resolve) {\n                return resolve(cached);\n            });\n        }\n\n        var serviceProvider = obj.SERVICE_PROVIDER || this.SERVICE_PROVIDER,\n            filterService = obj.findService || C.findService,\n            body = obj.body;\n\n        if (this.extra) _.extend(body, this.extra);\n\n        return Q($.ajax({\n            url: serviceProvider + filterService + this._parseQueryParams(obj.params),\n            type: obj.type || \"POST\",\n            contentType: obj.dataType || \"application/json\",\n            data: JSON.stringify(body),\n            dataType: obj.dataType || 'json'\n        })).then(function (data) {\n\n            self._setCacheItem(key, data ? data : null);\n\n            return Q.promise(function (resolve, reject, notify) {\n                return resolve(self._getCacheItem(key));\n            });\n\n        }, function (error) {\n\n            return Q.promise(function (resolve, reject, notify) {\n                return reject(error);\n            });\n\n        });\n    };\n\n    Bridge.prototype.deleteMetadata = function(obj) {\n        var serviceProvider = obj.SERVICE_PROVIDER || this.SERVICE_PROVIDER,\n            deleteService = obj.metadataService || C.metadataService;\n\n        return Q($.ajax({\n            url: serviceProvider + deleteService + this._parseUidAndVersion(obj, true),\n            type: obj.type || \"DELETE\",\n            // Datatype changed to text as the server returns an empty response,\n            // setting it to json would trigger an error on success\n            dataType: 'text'\n\n        })).then(function (data) {\n            return Q.promise(function (resolve, reject, notify) {\n                return resolve(data);\n            });\n        }, function (error) {\n            return Q.promise(function (resolve, reject, notify) {\n                return reject(error);\n            });\n\n        });\n    };\n\n    Bridge.prototype.deleteResource = function(obj) {\n\n        var serviceProvider = obj.SERVICE_PROVIDER || this.SERVICE_PROVIDER,\n            deleteService = obj.resourcesService || C.resourcesService;\n\n        return Q($.ajax({\n            url: serviceProvider + deleteService + this._parseUidAndVersion(obj, true),\n            type: obj.type || \"DELETE\",\n            // Datatype changed to text as the server returns an empty response,\n            // setting it to json would trigger an error on success\n            dataType: 'text'\n\n        })).then(function (data) {\n            return Q.promise(function (resolve, reject, notify) {\n                return resolve(data);\n            });\n        }, function (error) {\n            return Q.promise(function (resolve, reject, notify) {\n                return reject(error);\n            });\n\n        });\n    };\n\n    Bridge.prototype._protoSaveUpdate = function(service, type, obj) {\n        var serviceProvider = obj.SERVICE_PROVIDER || this.SERVICE_PROVIDER,\n            saveService = service,\n            body = obj.body,\n            type = obj.type || type;\n\n        if (this.extra) _.extend(body, this.extra);\n\n        return Q($.ajax({\n            contentType: obj.contentType || 'application/json',\n            url: serviceProvider + saveService,\n            type: type,\n            data: JSON.stringify(body),\n            dataType: obj.dataType || 'json'\n        })).then(function (data) {\n            return Q.promise(function (resolve, reject, notify) {\n                return resolve(data);\n            });\n        }, function (error) {\n            return Q.promise(function (resolve, reject, notify) {\n                return reject(error);\n            });\n\n        });\n\n    };\n\n    Bridge.prototype.saveMetadata = function (obj) {\n        var saveService = obj.metadataService || C.metadataService;\n        return this._protoSaveUpdate(saveService, \"POST\", obj);\n    };\n\n    Bridge.prototype.saveDSD = function (obj) {\n        var saveService = obj.dsdService || C.dsdService;\n        return this._protoSaveUpdate(saveService, \"POST\", obj);\n    };\n\n    Bridge.prototype.saveData = function (obj) {\n        var saveService = obj.resourcesService || C.resourcesService;\n        return this._protoSaveUpdate(saveService, \"POST\", obj);\n    };\n\n    Bridge.prototype.updateDSD = function (obj) {\n        var saveService = obj.dsdService || C.dsdService;\n        return this._protoSaveUpdate(saveService, \"PUT\", obj);\n    };\n\n    Bridge.prototype.updateData = function (obj) {\n        var saveService = obj.resourcesService || C.resourcesService;\n        return this._protoSaveUpdate(saveService, \"PUT\", obj);\n    };\n\n    Bridge.prototype.deleteData = function (obj) {\n        var saveService = obj.resourcesService || C.resourcesService;\n        obj.body.data = [];\n        return this._protoSaveUpdate(saveService, \"PUT\", obj);\n    };\n\n    Bridge.prototype.updateMetadata = function (obj) {\n        var saveService = obj.metadataService || C.metadataService;\n        if (obj.dsdRid) {\n            obj.body.dsd = {\n                'rid' : obj.dsdRid\n            }\n        }\n        return this._protoSaveUpdate(saveService, \"PUT\", obj);\n    };\n\n    Bridge.prototype.getColumnDistinctValues = function (obj) {\n\n        var key = _.extend({\n                type: \"distinct\",\n                environment: this.ENVIR\n            }, obj),\n            cached = this._getCacheItem(key),\n            self = this;\n\n        if (this.USE_CACHE && cached) {\n            return Q.promise(function (resolve) {\n                return resolve(cached);\n            });\n        }\n\n        var serviceProvider = obj.serviceProvider || this.SERVICE_PROVIDER,\n            columnDistinctValues = obj.columnDistinctValues  || C.columnDistinctValues,\n            url = serviceProvider + columnDistinctValues + this._parseUidAndVersion(obj, false) +\"/\"+ obj.columnId;\n\n        return Q($.ajax({\n            url: url,\n            type: obj.type || \"GET\",\n            dataType: obj.dataType || 'json'\n        })).then(function (data) {\n\n            self._setCacheItem(key, data ? data : null);\n\n            return Q.promise(function (resolve, reject, notify) {\n                return resolve(self._getCacheItem(key));\n            });\n\n        }, function (error) {\n\n            return Q.promise(function (resolve, reject, notify) {\n                return reject(error);\n            });\n\n        });\n    };\n\n    Bridge.prototype.getEnumeration = function (obj) {\n\n        var key = _.extend({\n                type: \"enumeration\",\n                environment: this.ENVIR\n            }, obj),\n            cached = this._getCacheItem(key),\n            self = this;\n\n        if (this.USE_CACHE && cached) {\n            return Q.promise(function (resolve) {\n                return resolve(cached);\n            });\n        }\n\n        var serviceProvider = obj.serviceProvider || this.SERVICE_PROVIDER,\n            enumerationService = obj.enumerationService || C.enumerationService;\n\n        return Q($.ajax({\n            url: serviceProvider + enumerationService + obj.uid,\n            type: obj.type || \"GET\",\n            dataType: obj.dataType || 'json'\n        })).then(function (data) {\n\n            self._setCacheItem(key, data ? data : null);\n\n            return Q.promise(function (resolve, reject, notify) {\n                return resolve(self._getCacheItem(key));\n            });\n\n        }, function (error) {\n\n            return Q.promise(function (resolve, reject, notify) {\n                return reject(error);\n            });\n\n        });\n    };\n\n    Bridge.prototype.getCodeList = function (obj) {\n\n        var key = _.extend({\n                type: \"codelist\",\n                environment: this.ENVIR\n            }, obj),\n            cached = this._getCacheItem(key),\n            self = this;\n\n        if (this.USE_CACHE && cached) {\n            return Q.promise(function (resolve) {\n                return resolve(cached);\n            });\n        }\n\n        var serviceProvider = obj.serviceProvider || this.SERVICE_PROVIDER,\n            codeListService = obj.codeListService || C.codelistService,\n            body = obj.body;\n\n        if (this.extra) _.extend(body, this.extra);\n\n        return Q($.ajax({\n            url: serviceProvider + codeListService + this._parseQueryParams(obj.params),\n            type: obj.type || \"POST\",\n            dataType: obj.dataType || 'json',\n            contentType: obj.contentType || \"application/json\",\n            data: JSON.stringify(body)\n        })).then(function (data) {\n\n            self._setCacheItem(key, data ? data : null);\n\n            return Q.promise(function (resolve, reject, notify) {\n                return resolve(self._getCacheItem(key));\n            });\n\n        }, function (error) {\n\n            return Q.promise(function (resolve, reject, notify) {\n                return reject(error);\n            });\n\n        });\n\n    };\n\n    Bridge.prototype.getResource = function (obj) {\n\n        var key = _.extend({\n                type: \"resource\",\n                environment: this.ENVIR\n            }, obj),\n            cached = this._getCacheItem(key),\n            self = this,\n            body = obj.body;\n\n        if (this.extra) _.extend(body, this.extra);\n\n        if (this.USE_CACHE && cached) {\n            return Q.promise(function (resolve) {\n                return resolve(cached);\n            });\n        }\n\n        var serviceProvider = obj.serviceProvider || this.SERVICE_PROVIDER,\n            processesService = obj.processesService || C.resourcesService,\n            url = serviceProvider + processesService + this._parseUidAndVersion(obj, true) + this._parseQueryParams(obj.params);\n\n        return Q($.ajax({\n            url: url,\n            type: obj.type || \"GET\",\n            contentType: obj.contentType || \"application/json\",\n            data: JSON.stringify(body)\n        })).then(function (data) {\n\n            self._setCacheItem(key, data ? data : null);\n\n            return Q.promise(function (resolve, reject, notify) {\n                return resolve(self._getCacheItem(key));\n            });\n\n        }, function (error) {\n\n            return Q.promise(function (resolve, reject, notify) {\n                return reject(error);\n            });\n\n        });\n    };\n\n    Bridge.prototype.getProcessedResource = function (obj) {\n\n        var key = _.extend({\n                type: \"process\",\n                environment: this.ENVIR\n            }, obj),\n            cached = this._getCacheItem(key),\n            self = this,\n            body = obj.body;\n\n        if (this.USE_CACHE && cached) {\n            return Q.promise(function (resolve) {\n                return resolve(cached);\n            });\n        }\n\n        if (this.extra) _.extend(body, this.extra);\n\n        var serviceProvider = obj.serviceProvider || this.SERVICE_PROVIDER,\n            processesService = obj.processesService || C.processesService,\n            isMultiResource = obj.hasOwnProperty(\"uid\"),\n            url = ( serviceProvider + processesService) + (isMultiResource ? this._parseUidAndVersion(obj, false) : \"\") + this._parseQueryParams(obj.params);\n\n        return Q($.ajax({\n            url: url,\n            type: obj.type || \"POST\",\n            dataType: obj.dataType || 'json',\n            contentType: obj.contentType || \"application/json\",\n            data: JSON.stringify(body)\n        })).then(function (data) {\n\n            self._setCacheItem(key, data ? data : null);\n\n            return Q.promise(function (resolve, reject, notify) {\n                return resolve(self._getCacheItem(key));\n            });\n\n        }, function (error) {\n\n            return Q.promise(function (resolve, reject, notify) {\n                return reject(error);\n            });\n\n        });\n    };\n\n    Bridge.prototype.getMetadata = function (obj) {\n\n        var key = _.extend({\n                type: \"metadata\",\n                environment: this.ENVIR\n            }, obj),\n            cached = this._getCacheItem(key),\n            self = this;\n\n        if (this.USE_CACHE && cached) {\n            return Q.promise(function (resolve) {\n                return resolve(cached);\n            });\n        }\n\n        var serviceProvider = obj.serviceProvider || this.SERVICE_PROVIDER,\n            processesService = obj.metadataService || C.metadataService;\n\n        return Q($.ajax({\n            url: serviceProvider + processesService + this._parseUidAndVersion(obj, true) + this._parseQueryParams(obj.params),\n            type: obj.type || \"GET\",\n            dataType: obj.dataType || 'json'\n        })).then(function (data) {\n\n            self._setCacheItem(key, data ? data : null);\n\n            return Q.promise(function (resolve, reject, notify) {\n                return resolve(self._getCacheItem(key));\n            });\n\n        }, function (error) {\n\n            return Q.promise(function (resolve, reject, notify) {\n                return reject(error);\n            });\n\n        });\n\n    };\n\n    Bridge.prototype.export = function (payload, obj) {\n\n        var serviceProvider = (obj && obj.serviceProvider) || this.SERVICE_PROVIDER;\n        var url = '';\n        if((obj!=null)&&(typeof obj!='undefined')&&(obj.params!=null)&&(typeof obj.params!='undefined')) {\n            url = serviceProvider + (C.exportService)+  this._parseQueryParams(obj.params);}\n        else{\n            url = serviceProvider + (C.exportService);}\n\n        return Q($.ajax({\n            url: url,\n            type: \"POST\",\n            contentType: \"application/json\",\n            data: JSON.stringify(payload)\n\n        })).then(function (data) {\n            var object = {'data': data, 'url': url};\n            return Q.promise(function (resolve, reject, notify) {\n                return resolve(object);\n            });\n\n        }, function (error) {\n            return Q.promise(function (resolve, reject, notify) {\n                return resolve(error);\n            });\n        });\n\n    };\n\n\n    Bridge.prototype.exportFlow = function (payload, obj) {\n\n        var serviceProvider = (obj && obj.serviceProvider) || this.SERVICE_PROVIDER,\n            url = serviceProvider + (C.exportFlow) + this._parseQueryParams(obj.params) ;\n\n        return Q($.ajax({\n            url: url,\n            type: \"POST\",\n            contentType: \"application/json\",\n            data: JSON.stringify(payload),\n            dataType:\"text\"\n\n        })).then(function (data) {\n            var object = {'data': data, 'url': url};\n            return Q.promise(function (resolve, reject, notify) {\n                return resolve(object);\n            });\n\n        }, function (error) {\n            return Q.promise(function (resolve, reject, notify) {\n                return resolve(error);\n            });\n        });\n\n    };\n\n    Bridge.prototype.exportStreaming = function (payload, obj) {\n\n        var serviceProvider = (obj && obj.serviceProvider) || this.SERVICE_PROVIDER,\n            url = serviceProvider + (C.exportStreaming) + this._parseQueryParams(obj.params) ;\n\n        return Q($.ajax({\n            url: url,\n            type: \"POST\",\n            contentType: \"application/json\",\n            data: JSON.stringify(payload),\n            dataType:\"text\"\n\n\n        })).then(function (data) {\n            var object = {'data': data, 'url': url};\n            return Q.promise(function (resolve, reject, notify) {\n                return resolve(object);\n            });\n\n        }, function (error) {\n            return Q.promise(function (resolve, reject, notify) {\n                return resolve(error);\n            });\n        });\n\n    };\n\n    Bridge.prototype.getMDSD = function (opts) {\n\n        var obj = opts || {},\n            key = _.extend({\n                type: \"mdsd\",\n                environment: this.ENVIR\n            }, obj),\n            cached = this._getCacheItem(key),\n            self = this;\n\n        if (this.USE_CACHE && cached) {\n            return Q.promise(function (resolve) {\n                return resolve(cached);\n            });\n        }\n\n        var serviceProvider = obj.serviceProvider || this.SERVICE_PROVIDER,\n            mdsdService = obj.mdsdService || C.mdsdService,\n            url = serviceProvider + mdsdService + this._parseQueryParams(obj.params);\n\n        return Q($.ajax({\n            url: url,\n            type: obj.type || \"GET\",\n            dataType: obj.dataType || 'json'\n        })).then(function (data) {\n\n            self._setCacheItem(key, data ? data : null);\n\n            return Q.promise(function (resolve, reject, notify) {\n                return resolve(self._getCacheItem(key));\n            });\n\n        }, function (error) {\n\n            return Q.promise(function (resolve, reject, notify) {\n                return reject(error);\n            });\n\n        });\n\n    };\n\n    Bridge.prototype.all = function (promises) {\n\n        return Q.all(promises);\n    };\n\n    Bridge.prototype.getCacheKey = function (obj) {\n\n        return this._getCacheKey(obj);\n    };\n\n    Bridge.prototype._parseQueryParams = function (params) {\n\n        if (!params) {\n            return '';\n        }\n\n        var result = '?';\n\n        _.each(params, function (value, key) {\n            result += key + '=' + value + '&'\n        });\n\n        return result.substring(0, result.length - 1);\n\n    };\n\n    Bridge.prototype._parseUidAndVersion = function (params, appendUid) {\n\n        var result = '',\n            versionFound = false;\n\n        if (!params.uid) {\n            log.warn(\"Impossible to find uid\")\n        }\n\n        result = result.concat(params.uid);\n\n        if (!!params.version) {\n            result = result.concat(\"/\").concat(params.version);\n            versionFound = true;\n        }\n\n        return (appendUid === true && versionFound !== true) ? 'uid/' + result : result;\n\n    };\n\n    Bridge.prototype._setCacheItem = function (obj, value) {\n\n        var key = this.getCacheKey(obj);\n\n        try {\n            amplify.sessionStorage(key, value)\n        } catch (e) {\n\n            this.cache_db[key] = value;\n        }\n\n        return this._getCacheItem(key);\n    };\n\n    Bridge.prototype._getCacheItem = function (obj) {\n\n        var key = this.getCacheKey(obj),\n            item = amplify.sessionStorage(key);\n\n        return item ? item : this.cache_db[key];\n\n    };\n\n    Bridge.prototype._getCacheKey = function (obj) {\n\n        var key = Hash(obj);\n\n        return key;\n\n    };\n\n    return Bridge;\n\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/js/index.js\n ** module id = 1\n ** module chunks = 0\n **/","if (typeof define !== 'function') {\n    var define = require('amdefine')(module);\n}\n\ndefine(function () {\n\n    'use strict';\n\n    var serverDevelop = '//fenix.fao.org/',\n        serverProduction = '//fenixservices.fao.org/',\n        serverDemo = '//fenix.fao.org/',\n        serverGIFT = '//fenixservices.fao.org/dev/gift/',\n        serverWiewsQA = '//www.fao.org/fenix/wiews/api/',\n        serverWiewsProduction = '//www-test.fao.org/fenix/wiews/api/';\n\n\n    return {\n\n        //Bridge\n        serviceProviderProduction : serverProduction + \"d3s/\",\n        serviceProviderDevelop : serverDevelop + \"d3s_dev/\",\n        serviceProviderDemo : serverDemo + \"d3s/\",\n        serviceProviderGift : serverGIFT,\n        serviceProviderWiews : serverDemo + \"d3s_wiews/\",\n        serviceProviderWiews_qa : serverWiewsQA + \"d3s/\",\n        serviceProviderWiews_production : serverWiewsProduction + \"d3s/\",\n\n        exportService :\"/fenix/export\",\n        exportFlow :\"/export/flow\",\n        exportStreaming :\"/export/\",\n        findService : \"msd/resources/find\",\n        codelistService: 'msd/codes/filter',\n        enumerationService: 'msd/choices/',\n        processesService : \"processes/\",\n        metadataService : \"msd/resources/metadata/\",\n        dsdService : \"msd/resources/dsd\",\n        resourcesService : \"msd/resources/\",\n        mdsdService : \"mdsd/\",\n        columnDistinctValues : \"dataset/distinct/\",\n\n        cache : true\n    }\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/config/config.js\n ** module id = 2\n ** module chunks = 0\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_3__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"jquery\"\n ** module id = 3\n ** module chunks = 0\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_4__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"underscore\"\n ** module id = 4\n ** module chunks = 0\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_5__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"q\"\n ** module id = 5\n ** module chunks = 0\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_6__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"loglevel\"\n ** module id = 6\n ** module chunks = 0\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_7__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"object-hash\"\n ** module id = 7\n ** module chunks = 0\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_8__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"amplify-store\"\n ** module id = 8\n ** module chunks = 0\n **/"],"sourceRoot":""}